 %---------------------------- 
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_1.30_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_1.30_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read \;;columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par1024_0336_130_002260_P11 = dataArray{:, 1};
par1024_0336_130_002260_P21 = dataArray{:, 2};
par1024_0336_130_002260_P22 = dataArray{:, 3};
par1024_0336_130_002260_P33 = dataArray{:, 4};
par1024_0336_130_002260_P43 = dataArray{:, 5};
par1024_0336_130_002260_P44 = dataArray{:, 6};
% parpol1024_0336_130_002260 = dataArray{:, 7};
parpol1024_0336_130_002260 = -par1024_0336_130_002260_P21./par1024_0336_130_002260_P11
maxparpol1024_0336_130_002260 = max(parpol1024_0336_130_002260)

frwd_par1024_0336_130_002260 = par1024_0336_130_002260_P11(1)
back_par1024_0336_130_002260= par1024_0336_130_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_1.30_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_1.30_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa1024_0336_130_002260 = dataArray{:, 1};
ParQs1024_0336_130_002260 = dataArray{:, 2};
ParQe1024_0336_130_002260 = dataArray{:, 3};
ParCsca1024_0336_130_002260 = dataArray{:, 4};
ParCabs1024_0336_130_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_1.30_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_1.30_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par1024_0336_130_004500_P11 = dataArray{:, 1};
par1024_0336_130_004500_P21 = dataArray{:, 2};
par1024_0336_130_004500_P22 = dataArray{:, 3};
par1024_0336_130_004500_P33 = dataArray{:, 4};
par1024_0336_130_004500_P43 = dataArray{:, 5};
par1024_0336_130_004500_P44 = dataArray{:, 6};
% parpol1024_0336_130_004500 = dataArray{:, 7};
parpol1024_0336_130_004500 = -par1024_0336_130_004500_P21./par1024_0336_130_004500_P11
maxparpol1024_0336_130_004500 = max(parpol1024_0336_130_004500)

frwd_par1024_0336_130_004500 = par1024_0336_130_004500_P11(1)
back_par1024_0336_130_004500= par1024_0336_130_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_1.30_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_1.30_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa1024_0336_130_004500 = dataArray{:, 1};
ParQs1024_0336_130_004500 = dataArray{:, 2};
ParQe1024_0336_130_004500 = dataArray{:, 3};
ParCsca1024_0336_130_004500 = dataArray{:, 4};
ParCabs1024_0336_130_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_1.30_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_1.30_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par1024_0336_130_009000_P11 = dataArray{:, 1};
par1024_0336_130_009000_P21 = dataArray{:, 2};
par1024_0336_130_009000_P22 = dataArray{:, 3};
par1024_0336_130_009000_P33 = dataArray{:, 4};
par1024_0336_130_009000_P43 = dataArray{:, 5};
par1024_0336_130_009000_P44 = dataArray{:, 6};
% parpol1024_0336_130_009000 = dataArray{:, 7};
parpol1024_0336_130_009000 = -par1024_0336_130_009000_P21./par1024_0336_130_009000_P11
maxparpol1024_0336_130_009000 = max(parpol1024_0336_130_009000)

frwd_par1024_0336_130_009000 = par1024_0336_130_009000_P11(1)
back_par1024_0336_130_009000= par1024_0336_130_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_1.30_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_1.30_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa1024_0336_130_009000 = dataArray{:, 1};
ParQs1024_0336_130_009000 = dataArray{:, 2};
ParQe1024_0336_130_009000 = dataArray{:, 3};
ParCsca1024_0336_130_009000 = dataArray{:, 4};
ParCabs1024_0336_130_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_1.70_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_1.70_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par1024_0336_170_002260_P11 = dataArray{:, 1};
par1024_0336_170_002260_P21 = dataArray{:, 2};
par1024_0336_170_002260_P22 = dataArray{:, 3};
par1024_0336_170_002260_P33 = dataArray{:, 4};
par1024_0336_170_002260_P43 = dataArray{:, 5};
par1024_0336_170_002260_P44 = dataArray{:, 6};
% parpol1024_0336_170_002260 = dataArray{:, 7};
parpol1024_0336_170_002260 = -par1024_0336_170_002260_P21./par1024_0336_170_002260_P11
maxparpol1024_0336_170_002260 = max(parpol1024_0336_170_002260)

frwd_par1024_0336_170_002260 = par1024_0336_170_002260_P11(1)
back_par1024_0336_170_002260= par1024_0336_170_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_1.70_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_1.70_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa1024_0336_170_002260 = dataArray{:, 1};
ParQs1024_0336_170_002260 = dataArray{:, 2};
ParQe1024_0336_170_002260 = dataArray{:, 3};
ParCsca1024_0336_170_002260 = dataArray{:, 4};
ParCabs1024_0336_170_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_1.70_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_1.70_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par1024_0336_170_004500_P11 = dataArray{:, 1};
par1024_0336_170_004500_P21 = dataArray{:, 2};
par1024_0336_170_004500_P22 = dataArray{:, 3};
par1024_0336_170_004500_P33 = dataArray{:, 4};
par1024_0336_170_004500_P43 = dataArray{:, 5};
par1024_0336_170_004500_P44 = dataArray{:, 6};
% parpol1024_0336_170_004500 = dataArray{:, 7};
parpol1024_0336_170_004500 = -par1024_0336_170_004500_P21./par1024_0336_170_004500_P11
maxparpol1024_0336_170_004500 = max(parpol1024_0336_170_004500)

frwd_par1024_0336_170_004500 = par1024_0336_170_004500_P11(1)
back_par1024_0336_170_004500= par1024_0336_170_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_1.70_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_1.70_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa1024_0336_170_004500 = dataArray{:, 1};
ParQs1024_0336_170_004500 = dataArray{:, 2};
ParQe1024_0336_170_004500 = dataArray{:, 3};
ParCsca1024_0336_170_004500 = dataArray{:, 4};
ParCabs1024_0336_170_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_1.70_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_1.70_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par1024_0336_170_009000_P11 = dataArray{:, 1};
par1024_0336_170_009000_P21 = dataArray{:, 2};
par1024_0336_170_009000_P22 = dataArray{:, 3};
par1024_0336_170_009000_P33 = dataArray{:, 4};
par1024_0336_170_009000_P43 = dataArray{:, 5};
par1024_0336_170_009000_P44 = dataArray{:, 6};
% parpol1024_0336_170_009000 = dataArray{:, 7};
parpol1024_0336_170_009000 = -par1024_0336_170_009000_P21./par1024_0336_170_009000_P11
maxparpol1024_0336_170_009000 = max(parpol1024_0336_170_009000)

frwd_par1024_0336_170_009000 = par1024_0336_170_009000_P11(1)
back_par1024_0336_170_009000= par1024_0336_170_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_1.70_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_1.70_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa1024_0336_170_009000 = dataArray{:, 1};
ParQs1024_0336_170_009000 = dataArray{:, 2};
ParQe1024_0336_170_009000 = dataArray{:, 3};
ParCsca1024_0336_170_009000 = dataArray{:, 4};
ParCabs1024_0336_170_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_2.00_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_2.00_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par1024_0336_200_002260_P11 = dataArray{:, 1};
par1024_0336_200_002260_P21 = dataArray{:, 2};
par1024_0336_200_002260_P22 = dataArray{:, 3};
par1024_0336_200_002260_P33 = dataArray{:, 4};
par1024_0336_200_002260_P43 = dataArray{:, 5};
par1024_0336_200_002260_P44 = dataArray{:, 6};
% parpol1024_0336_200_002260 = dataArray{:, 7};
parpol1024_0336_200_002260 = -par1024_0336_200_002260_P21./par1024_0336_200_002260_P11
maxparpol1024_0336_200_002260 = max(parpol1024_0336_200_002260)

frwd_par1024_0336_200_002260 = par1024_0336_200_002260_P11(1)
back_par1024_0336_200_002260= par1024_0336_200_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_2.00_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_2.00_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa1024_0336_200_002260 = dataArray{:, 1};
ParQs1024_0336_200_002260 = dataArray{:, 2};
ParQe1024_0336_200_002260 = dataArray{:, 3};
ParCsca1024_0336_200_002260 = dataArray{:, 4};
ParCabs1024_0336_200_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_2.00_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_2.00_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par1024_0336_200_004500_P11 = dataArray{:, 1};
par1024_0336_200_004500_P21 = dataArray{:, 2};
par1024_0336_200_004500_P22 = dataArray{:, 3};
par1024_0336_200_004500_P33 = dataArray{:, 4};
par1024_0336_200_004500_P43 = dataArray{:, 5};
par1024_0336_200_004500_P44 = dataArray{:, 6};
% parpol1024_0336_200_004500 = dataArray{:, 7};
parpol1024_0336_200_004500 = -par1024_0336_200_004500_P21./par1024_0336_200_004500_P11
maxparpol1024_0336_200_004500 = max(parpol1024_0336_200_004500)

frwd_par1024_0336_200_004500 = par1024_0336_200_004500_P11(1)
back_par1024_0336_200_004500= par1024_0336_200_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_2.00_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_2.00_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa1024_0336_200_004500 = dataArray{:, 1};
ParQs1024_0336_200_004500 = dataArray{:, 2};
ParQe1024_0336_200_004500 = dataArray{:, 3};
ParCsca1024_0336_200_004500 = dataArray{:, 4};
ParCabs1024_0336_200_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_2.00_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_2.00_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par1024_0336_200_009000_P11 = dataArray{:, 1};
par1024_0336_200_009000_P21 = dataArray{:, 2};
par1024_0336_200_009000_P22 = dataArray{:, 3};
par1024_0336_200_009000_P33 = dataArray{:, 4};
par1024_0336_200_009000_P43 = dataArray{:, 5};
par1024_0336_200_009000_P44 = dataArray{:, 6};
% parpol1024_0336_200_009000 = dataArray{:, 7};
parpol1024_0336_200_009000 = -par1024_0336_200_009000_P21./par1024_0336_200_009000_P11
maxparpol1024_0336_200_009000 = max(parpol1024_0336_200_009000)

frwd_par1024_0336_200_009000 = par1024_0336_200_009000_P11(1)
back_par1024_0336_200_009000= par1024_0336_200_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_2.00_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.336_2.00_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa1024_0336_200_009000 = dataArray{:, 1};
ParQs1024_0336_200_009000 = dataArray{:, 2};
ParQe1024_0336_200_009000 = dataArray{:, 3};
ParCsca1024_0336_200_009000 = dataArray{:, 4};
ParCabs1024_0336_200_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_1.30_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_1.30_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par1024_0640_130_002260_P11 = dataArray{:, 1};
par1024_0640_130_002260_P21 = dataArray{:, 2};
par1024_0640_130_002260_P22 = dataArray{:, 3};
par1024_0640_130_002260_P33 = dataArray{:, 4};
par1024_0640_130_002260_P43 = dataArray{:, 5};
par1024_0640_130_002260_P44 = dataArray{:, 6};
% parpol1024_0640_130_002260 = dataArray{:, 7};
parpol1024_0640_130_002260 = -par1024_0640_130_002260_P21./par1024_0640_130_002260_P11
maxparpol1024_0640_130_002260 = max(parpol1024_0640_130_002260)

frwd_par1024_0640_130_002260 = par1024_0640_130_002260_P11(1)
back_par1024_0640_130_002260= par1024_0640_130_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_1.30_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_1.30_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa1024_0640_130_002260 = dataArray{:, 1};
ParQs1024_0640_130_002260 = dataArray{:, 2};
ParQe1024_0640_130_002260 = dataArray{:, 3};
ParCsca1024_0640_130_002260 = dataArray{:, 4};
ParCabs1024_0640_130_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_1.30_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_1.30_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par1024_0640_130_004500_P11 = dataArray{:, 1};
par1024_0640_130_004500_P21 = dataArray{:, 2};
par1024_0640_130_004500_P22 = dataArray{:, 3};
par1024_0640_130_004500_P33 = dataArray{:, 4};
par1024_0640_130_004500_P43 = dataArray{:, 5};
par1024_0640_130_004500_P44 = dataArray{:, 6};
% parpol1024_0640_130_004500 = dataArray{:, 7};
parpol1024_0640_130_004500 = -par1024_0640_130_004500_P21./par1024_0640_130_004500_P11
maxparpol1024_0640_130_004500 = max(parpol1024_0640_130_004500)

frwd_par1024_0640_130_004500 = par1024_0640_130_004500_P11(1)
back_par1024_0640_130_004500= par1024_0640_130_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_1.30_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_1.30_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa1024_0640_130_004500 = dataArray{:, 1};
ParQs1024_0640_130_004500 = dataArray{:, 2};
ParQe1024_0640_130_004500 = dataArray{:, 3};
ParCsca1024_0640_130_004500 = dataArray{:, 4};
ParCabs1024_0640_130_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_1.30_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_1.30_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par1024_0640_130_009000_P11 = dataArray{:, 1};
par1024_0640_130_009000_P21 = dataArray{:, 2};
par1024_0640_130_009000_P22 = dataArray{:, 3};
par1024_0640_130_009000_P33 = dataArray{:, 4};
par1024_0640_130_009000_P43 = dataArray{:, 5};
par1024_0640_130_009000_P44 = dataArray{:, 6};
% parpol1024_0640_130_009000 = dataArray{:, 7};
parpol1024_0640_130_009000 = -par1024_0640_130_009000_P21./par1024_0640_130_009000_P11
maxparpol1024_0640_130_009000 = max(parpol1024_0640_130_009000)

frwd_par1024_0640_130_009000 = par1024_0640_130_009000_P11(1)
back_par1024_0640_130_009000= par1024_0640_130_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_1.30_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_1.30_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa1024_0640_130_009000 = dataArray{:, 1};
ParQs1024_0640_130_009000 = dataArray{:, 2};
ParQe1024_0640_130_009000 = dataArray{:, 3};
ParCsca1024_0640_130_009000 = dataArray{:, 4};
ParCabs1024_0640_130_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_1.70_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_1.70_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par1024_0640_170_002260_P11 = dataArray{:, 1};
par1024_0640_170_002260_P21 = dataArray{:, 2};
par1024_0640_170_002260_P22 = dataArray{:, 3};
par1024_0640_170_002260_P33 = dataArray{:, 4};
par1024_0640_170_002260_P43 = dataArray{:, 5};
par1024_0640_170_002260_P44 = dataArray{:, 6};
% parpol1024_0640_170_002260 = dataArray{:, 7};
parpol1024_0640_170_002260 = -par1024_0640_170_002260_P21./par1024_0640_170_002260_P11
maxparpol1024_0640_170_002260 = max(parpol1024_0640_170_002260)

frwd_par1024_0640_170_002260 = par1024_0640_170_002260_P11(1)
back_par1024_0640_170_002260= par1024_0640_170_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_1.70_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_1.70_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa1024_0640_170_002260 = dataArray{:, 1};
ParQs1024_0640_170_002260 = dataArray{:, 2};
ParQe1024_0640_170_002260 = dataArray{:, 3};
ParCsca1024_0640_170_002260 = dataArray{:, 4};
ParCabs1024_0640_170_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_1.70_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_1.70_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par1024_0640_170_004500_P11 = dataArray{:, 1};
par1024_0640_170_004500_P21 = dataArray{:, 2};
par1024_0640_170_004500_P22 = dataArray{:, 3};
par1024_0640_170_004500_P33 = dataArray{:, 4};
par1024_0640_170_004500_P43 = dataArray{:, 5};
par1024_0640_170_004500_P44 = dataArray{:, 6};
% parpol1024_0640_170_004500 = dataArray{:, 7};
parpol1024_0640_170_004500 = -par1024_0640_170_004500_P21./par1024_0640_170_004500_P11
maxparpol1024_0640_170_004500 = max(parpol1024_0640_170_004500)

frwd_par1024_0640_170_004500 = par1024_0640_170_004500_P11(1)
back_par1024_0640_170_004500= par1024_0640_170_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_1.70_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_1.70_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa1024_0640_170_004500 = dataArray{:, 1};
ParQs1024_0640_170_004500 = dataArray{:, 2};
ParQe1024_0640_170_004500 = dataArray{:, 3};
ParCsca1024_0640_170_004500 = dataArray{:, 4};
ParCabs1024_0640_170_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_1.70_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_1.70_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par1024_0640_170_009000_P11 = dataArray{:, 1};
par1024_0640_170_009000_P21 = dataArray{:, 2};
par1024_0640_170_009000_P22 = dataArray{:, 3};
par1024_0640_170_009000_P33 = dataArray{:, 4};
par1024_0640_170_009000_P43 = dataArray{:, 5};
par1024_0640_170_009000_P44 = dataArray{:, 6};
% parpol1024_0640_170_009000 = dataArray{:, 7};
parpol1024_0640_170_009000 = -par1024_0640_170_009000_P21./par1024_0640_170_009000_P11
maxparpol1024_0640_170_009000 = max(parpol1024_0640_170_009000)

frwd_par1024_0640_170_009000 = par1024_0640_170_009000_P11(1)
back_par1024_0640_170_009000= par1024_0640_170_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_1.70_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_1.70_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa1024_0640_170_009000 = dataArray{:, 1};
ParQs1024_0640_170_009000 = dataArray{:, 2};
ParQe1024_0640_170_009000 = dataArray{:, 3};
ParCsca1024_0640_170_009000 = dataArray{:, 4};
ParCabs1024_0640_170_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_2.00_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_2.00_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par1024_0640_200_002260_P11 = dataArray{:, 1};
par1024_0640_200_002260_P21 = dataArray{:, 2};
par1024_0640_200_002260_P22 = dataArray{:, 3};
par1024_0640_200_002260_P33 = dataArray{:, 4};
par1024_0640_200_002260_P43 = dataArray{:, 5};
par1024_0640_200_002260_P44 = dataArray{:, 6};
% parpol1024_0640_200_002260 = dataArray{:, 7};
parpol1024_0640_200_002260 = -par1024_0640_200_002260_P21./par1024_0640_200_002260_P11
maxparpol1024_0640_200_002260 = max(parpol1024_0640_200_002260)

frwd_par1024_0640_200_002260 = par1024_0640_200_002260_P11(1)
back_par1024_0640_200_002260= par1024_0640_200_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_2.00_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_2.00_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa1024_0640_200_002260 = dataArray{:, 1};
ParQs1024_0640_200_002260 = dataArray{:, 2};
ParQe1024_0640_200_002260 = dataArray{:, 3};
ParCsca1024_0640_200_002260 = dataArray{:, 4};
ParCabs1024_0640_200_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_2.00_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_2.00_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par1024_0640_200_004500_P11 = dataArray{:, 1};
par1024_0640_200_004500_P21 = dataArray{:, 2};
par1024_0640_200_004500_P22 = dataArray{:, 3};
par1024_0640_200_004500_P33 = dataArray{:, 4};
par1024_0640_200_004500_P43 = dataArray{:, 5};
par1024_0640_200_004500_P44 = dataArray{:, 6};
% parpol1024_0640_200_004500 = dataArray{:, 7};
parpol1024_0640_200_004500 = -par1024_0640_200_004500_P21./par1024_0640_200_004500_P11
maxparpol1024_0640_200_004500 = max(parpol1024_0640_200_004500)

frwd_par1024_0640_200_004500 = par1024_0640_200_004500_P11(1)
back_par1024_0640_200_004500= par1024_0640_200_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_2.00_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_2.00_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa1024_0640_200_004500 = dataArray{:, 1};
ParQs1024_0640_200_004500 = dataArray{:, 2};
ParQe1024_0640_200_004500 = dataArray{:, 3};
ParCsca1024_0640_200_004500 = dataArray{:, 4};
ParCabs1024_0640_200_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_2.00_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_2.00_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par1024_0640_200_009000_P11 = dataArray{:, 1};
par1024_0640_200_009000_P21 = dataArray{:, 2};
par1024_0640_200_009000_P22 = dataArray{:, 3};
par1024_0640_200_009000_P33 = dataArray{:, 4};
par1024_0640_200_009000_P43 = dataArray{:, 5};
par1024_0640_200_009000_P44 = dataArray{:, 6};
% parpol1024_0640_200_009000 = dataArray{:, 7};
parpol1024_0640_200_009000 = -par1024_0640_200_009000_P21./par1024_0640_200_009000_P11
maxparpol1024_0640_200_009000 = max(parpol1024_0640_200_009000)

frwd_par1024_0640_200_009000 = par1024_0640_200_009000_P11(1)
back_par1024_0640_200_009000= par1024_0640_200_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_2.00_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.640_2.00_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa1024_0640_200_009000 = dataArray{:, 1};
ParQs1024_0640_200_009000 = dataArray{:, 2};
ParQe1024_0640_200_009000 = dataArray{:, 3};
ParCsca1024_0640_200_009000 = dataArray{:, 4};
ParCabs1024_0640_200_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_1.30_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_1.30_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par1024_0960_130_002260_P11 = dataArray{:, 1};
par1024_0960_130_002260_P21 = dataArray{:, 2};
par1024_0960_130_002260_P22 = dataArray{:, 3};
par1024_0960_130_002260_P33 = dataArray{:, 4};
par1024_0960_130_002260_P43 = dataArray{:, 5};
par1024_0960_130_002260_P44 = dataArray{:, 6};
% parpol1024_0960_130_002260 = dataArray{:, 7};
parpol1024_0960_130_002260 = -par1024_0960_130_002260_P21./par1024_0960_130_002260_P11
maxparpol1024_0960_130_002260 = max(parpol1024_0960_130_002260)

frwd_par1024_0960_130_002260 = par1024_0960_130_002260_P11(1)
back_par1024_0960_130_002260= par1024_0960_130_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_1.30_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_1.30_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa1024_0960_130_002260 = dataArray{:, 1};
ParQs1024_0960_130_002260 = dataArray{:, 2};
ParQe1024_0960_130_002260 = dataArray{:, 3};
ParCsca1024_0960_130_002260 = dataArray{:, 4};
ParCabs1024_0960_130_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_1.30_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_1.30_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par1024_0960_130_004500_P11 = dataArray{:, 1};
par1024_0960_130_004500_P21 = dataArray{:, 2};
par1024_0960_130_004500_P22 = dataArray{:, 3};
par1024_0960_130_004500_P33 = dataArray{:, 4};
par1024_0960_130_004500_P43 = dataArray{:, 5};
par1024_0960_130_004500_P44 = dataArray{:, 6};
% parpol1024_0960_130_004500 = dataArray{:, 7};
parpol1024_0960_130_004500 = -par1024_0960_130_004500_P21./par1024_0960_130_004500_P11
maxparpol1024_0960_130_004500 = max(parpol1024_0960_130_004500)

frwd_par1024_0960_130_004500 = par1024_0960_130_004500_P11(1)
back_par1024_0960_130_004500= par1024_0960_130_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_1.30_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_1.30_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa1024_0960_130_004500 = dataArray{:, 1};
ParQs1024_0960_130_004500 = dataArray{:, 2};
ParQe1024_0960_130_004500 = dataArray{:, 3};
ParCsca1024_0960_130_004500 = dataArray{:, 4};
ParCabs1024_0960_130_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_1.30_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_1.30_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par1024_0960_130_009000_P11 = dataArray{:, 1};
par1024_0960_130_009000_P21 = dataArray{:, 2};
par1024_0960_130_009000_P22 = dataArray{:, 3};
par1024_0960_130_009000_P33 = dataArray{:, 4};
par1024_0960_130_009000_P43 = dataArray{:, 5};
par1024_0960_130_009000_P44 = dataArray{:, 6};
% parpol1024_0960_130_009000 = dataArray{:, 7};
parpol1024_0960_130_009000 = -par1024_0960_130_009000_P21./par1024_0960_130_009000_P11
maxparpol1024_0960_130_009000 = max(parpol1024_0960_130_009000)

frwd_par1024_0960_130_009000 = par1024_0960_130_009000_P11(1)
back_par1024_0960_130_009000= par1024_0960_130_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_1.30_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_1.30_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa1024_0960_130_009000 = dataArray{:, 1};
ParQs1024_0960_130_009000 = dataArray{:, 2};
ParQe1024_0960_130_009000 = dataArray{:, 3};
ParCsca1024_0960_130_009000 = dataArray{:, 4};
ParCabs1024_0960_130_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_1.70_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_1.70_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par1024_0960_170_002260_P11 = dataArray{:, 1};
par1024_0960_170_002260_P21 = dataArray{:, 2};
par1024_0960_170_002260_P22 = dataArray{:, 3};
par1024_0960_170_002260_P33 = dataArray{:, 4};
par1024_0960_170_002260_P43 = dataArray{:, 5};
par1024_0960_170_002260_P44 = dataArray{:, 6};
% parpol1024_0960_170_002260 = dataArray{:, 7};
parpol1024_0960_170_002260 = -par1024_0960_170_002260_P21./par1024_0960_170_002260_P11
maxparpol1024_0960_170_002260 = max(parpol1024_0960_170_002260)

frwd_par1024_0960_170_002260 = par1024_0960_170_002260_P11(1)
back_par1024_0960_170_002260= par1024_0960_170_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_1.70_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_1.70_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa1024_0960_170_002260 = dataArray{:, 1};
ParQs1024_0960_170_002260 = dataArray{:, 2};
ParQe1024_0960_170_002260 = dataArray{:, 3};
ParCsca1024_0960_170_002260 = dataArray{:, 4};
ParCabs1024_0960_170_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_1.70_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_1.70_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par1024_0960_170_004500_P11 = dataArray{:, 1};
par1024_0960_170_004500_P21 = dataArray{:, 2};
par1024_0960_170_004500_P22 = dataArray{:, 3};
par1024_0960_170_004500_P33 = dataArray{:, 4};
par1024_0960_170_004500_P43 = dataArray{:, 5};
par1024_0960_170_004500_P44 = dataArray{:, 6};
% parpol1024_0960_170_004500 = dataArray{:, 7};
parpol1024_0960_170_004500 = -par1024_0960_170_004500_P21./par1024_0960_170_004500_P11
maxparpol1024_0960_170_004500 = max(parpol1024_0960_170_004500)

frwd_par1024_0960_170_004500 = par1024_0960_170_004500_P11(1)
back_par1024_0960_170_004500= par1024_0960_170_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_1.70_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_1.70_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa1024_0960_170_004500 = dataArray{:, 1};
ParQs1024_0960_170_004500 = dataArray{:, 2};
ParQe1024_0960_170_004500 = dataArray{:, 3};
ParCsca1024_0960_170_004500 = dataArray{:, 4};
ParCabs1024_0960_170_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_1.70_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_1.70_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par1024_0960_170_009000_P11 = dataArray{:, 1};
par1024_0960_170_009000_P21 = dataArray{:, 2};
par1024_0960_170_009000_P22 = dataArray{:, 3};
par1024_0960_170_009000_P33 = dataArray{:, 4};
par1024_0960_170_009000_P43 = dataArray{:, 5};
par1024_0960_170_009000_P44 = dataArray{:, 6};
% parpol1024_0960_170_009000 = dataArray{:, 7};
parpol1024_0960_170_009000 = -par1024_0960_170_009000_P21./par1024_0960_170_009000_P11
maxparpol1024_0960_170_009000 = max(parpol1024_0960_170_009000)

frwd_par1024_0960_170_009000 = par1024_0960_170_009000_P11(1)
back_par1024_0960_170_009000= par1024_0960_170_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_1.70_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_1.70_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa1024_0960_170_009000 = dataArray{:, 1};
ParQs1024_0960_170_009000 = dataArray{:, 2};
ParQe1024_0960_170_009000 = dataArray{:, 3};
ParCsca1024_0960_170_009000 = dataArray{:, 4};
ParCabs1024_0960_170_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_2.00_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_2.00_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par1024_0960_200_002260_P11 = dataArray{:, 1};
par1024_0960_200_002260_P21 = dataArray{:, 2};
par1024_0960_200_002260_P22 = dataArray{:, 3};
par1024_0960_200_002260_P33 = dataArray{:, 4};
par1024_0960_200_002260_P43 = dataArray{:, 5};
par1024_0960_200_002260_P44 = dataArray{:, 6};
% parpol1024_0960_200_002260 = dataArray{:, 7};
parpol1024_0960_200_002260 = -par1024_0960_200_002260_P21./par1024_0960_200_002260_P11
maxparpol1024_0960_200_002260 = max(parpol1024_0960_200_002260)

frwd_par1024_0960_200_002260 = par1024_0960_200_002260_P11(1)
back_par1024_0960_200_002260= par1024_0960_200_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_2.00_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_2.00_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa1024_0960_200_002260 = dataArray{:, 1};
ParQs1024_0960_200_002260 = dataArray{:, 2};
ParQe1024_0960_200_002260 = dataArray{:, 3};
ParCsca1024_0960_200_002260 = dataArray{:, 4};
ParCabs1024_0960_200_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_2.00_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_2.00_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par1024_0960_200_004500_P11 = dataArray{:, 1};
par1024_0960_200_004500_P21 = dataArray{:, 2};
par1024_0960_200_004500_P22 = dataArray{:, 3};
par1024_0960_200_004500_P33 = dataArray{:, 4};
par1024_0960_200_004500_P43 = dataArray{:, 5};
par1024_0960_200_004500_P44 = dataArray{:, 6};
% parpol1024_0960_200_004500 = dataArray{:, 7};
parpol1024_0960_200_004500 = -par1024_0960_200_004500_P21./par1024_0960_200_004500_P11
maxparpol1024_0960_200_004500 = max(parpol1024_0960_200_004500)

frwd_par1024_0960_200_004500 = par1024_0960_200_004500_P11(1)
back_par1024_0960_200_004500= par1024_0960_200_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_2.00_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_2.00_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa1024_0960_200_004500 = dataArray{:, 1};
ParQs1024_0960_200_004500 = dataArray{:, 2};
ParQe1024_0960_200_004500 = dataArray{:, 3};
ParCsca1024_0960_200_004500 = dataArray{:, 4};
ParCabs1024_0960_200_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_2.00_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_2.00_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par1024_0960_200_009000_P11 = dataArray{:, 1};
par1024_0960_200_009000_P21 = dataArray{:, 2};
par1024_0960_200_009000_P22 = dataArray{:, 3};
par1024_0960_200_009000_P33 = dataArray{:, 4};
par1024_0960_200_009000_P43 = dataArray{:, 5};
par1024_0960_200_009000_P44 = dataArray{:, 6};
% parpol1024_0960_200_009000 = dataArray{:, 7};
parpol1024_0960_200_009000 = -par1024_0960_200_009000_P21./par1024_0960_200_009000_P11
maxparpol1024_0960_200_009000 = max(parpol1024_0960_200_009000)

frwd_par1024_0960_200_009000 = par1024_0960_200_009000_P11(1)
back_par1024_0960_200_009000= par1024_0960_200_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_2.00_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par1024_0.960_2.00_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa1024_0960_200_009000 = dataArray{:, 1};
ParQs1024_0960_200_009000 = dataArray{:, 2};
ParQe1024_0960_200_009000 = dataArray{:, 3};
ParCsca1024_0960_200_009000 = dataArray{:, 4};
ParCabs1024_0960_200_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_1.30_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_1.30_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par128_0336_130_002260_P11 = dataArray{:, 1};
par128_0336_130_002260_P21 = dataArray{:, 2};
par128_0336_130_002260_P22 = dataArray{:, 3};
par128_0336_130_002260_P33 = dataArray{:, 4};
par128_0336_130_002260_P43 = dataArray{:, 5};
par128_0336_130_002260_P44 = dataArray{:, 6};
% parpol128_0336_130_002260 = dataArray{:, 7};
parpol128_0336_130_002260 = -par128_0336_130_002260_P21./par128_0336_130_002260_P11
maxparpol128_0336_130_002260 = max(parpol128_0336_130_002260)

frwd_par128_0336_130_002260 = par128_0336_130_002260_P11(1)
back_par128_0336_130_002260= par128_0336_130_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_1.30_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_1.30_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa128_0336_130_002260 = dataArray{:, 1};
ParQs128_0336_130_002260 = dataArray{:, 2};
ParQe128_0336_130_002260 = dataArray{:, 3};
ParCsca128_0336_130_002260 = dataArray{:, 4};
ParCabs128_0336_130_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_1.30_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_1.30_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par128_0336_130_004500_P11 = dataArray{:, 1};
par128_0336_130_004500_P21 = dataArray{:, 2};
par128_0336_130_004500_P22 = dataArray{:, 3};
par128_0336_130_004500_P33 = dataArray{:, 4};
par128_0336_130_004500_P43 = dataArray{:, 5};
par128_0336_130_004500_P44 = dataArray{:, 6};
% parpol128_0336_130_004500 = dataArray{:, 7};
parpol128_0336_130_004500 = -par128_0336_130_004500_P21./par128_0336_130_004500_P11
maxparpol128_0336_130_004500 = max(parpol128_0336_130_004500)

frwd_par128_0336_130_004500 = par128_0336_130_004500_P11(1)
back_par128_0336_130_004500= par128_0336_130_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_1.30_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_1.30_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa128_0336_130_004500 = dataArray{:, 1};
ParQs128_0336_130_004500 = dataArray{:, 2};
ParQe128_0336_130_004500 = dataArray{:, 3};
ParCsca128_0336_130_004500 = dataArray{:, 4};
ParCabs128_0336_130_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_1.30_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_1.30_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par128_0336_130_009000_P11 = dataArray{:, 1};
par128_0336_130_009000_P21 = dataArray{:, 2};
par128_0336_130_009000_P22 = dataArray{:, 3};
par128_0336_130_009000_P33 = dataArray{:, 4};
par128_0336_130_009000_P43 = dataArray{:, 5};
par128_0336_130_009000_P44 = dataArray{:, 6};
% parpol128_0336_130_009000 = dataArray{:, 7};
parpol128_0336_130_009000 = -par128_0336_130_009000_P21./par128_0336_130_009000_P11
maxparpol128_0336_130_009000 = max(parpol128_0336_130_009000)

frwd_par128_0336_130_009000 = par128_0336_130_009000_P11(1)
back_par128_0336_130_009000= par128_0336_130_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_1.30_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_1.30_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa128_0336_130_009000 = dataArray{:, 1};
ParQs128_0336_130_009000 = dataArray{:, 2};
ParQe128_0336_130_009000 = dataArray{:, 3};
ParCsca128_0336_130_009000 = dataArray{:, 4};
ParCabs128_0336_130_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_1.70_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_1.70_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par128_0336_170_002260_P11 = dataArray{:, 1};
par128_0336_170_002260_P21 = dataArray{:, 2};
par128_0336_170_002260_P22 = dataArray{:, 3};
par128_0336_170_002260_P33 = dataArray{:, 4};
par128_0336_170_002260_P43 = dataArray{:, 5};
par128_0336_170_002260_P44 = dataArray{:, 6};
% parpol128_0336_170_002260 = dataArray{:, 7};
parpol128_0336_170_002260 = -par128_0336_170_002260_P21./par128_0336_170_002260_P11
maxparpol128_0336_170_002260 = max(parpol128_0336_170_002260)

frwd_par128_0336_170_002260 = par128_0336_170_002260_P11(1)
back_par128_0336_170_002260= par128_0336_170_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_1.70_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_1.70_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa128_0336_170_002260 = dataArray{:, 1};
ParQs128_0336_170_002260 = dataArray{:, 2};
ParQe128_0336_170_002260 = dataArray{:, 3};
ParCsca128_0336_170_002260 = dataArray{:, 4};
ParCabs128_0336_170_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_1.70_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_1.70_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par128_0336_170_004500_P11 = dataArray{:, 1};
par128_0336_170_004500_P21 = dataArray{:, 2};
par128_0336_170_004500_P22 = dataArray{:, 3};
par128_0336_170_004500_P33 = dataArray{:, 4};
par128_0336_170_004500_P43 = dataArray{:, 5};
par128_0336_170_004500_P44 = dataArray{:, 6};
% parpol128_0336_170_004500 = dataArray{:, 7};
parpol128_0336_170_004500 = -par128_0336_170_004500_P21./par128_0336_170_004500_P11
maxparpol128_0336_170_004500 = max(parpol128_0336_170_004500)

frwd_par128_0336_170_004500 = par128_0336_170_004500_P11(1)
back_par128_0336_170_004500= par128_0336_170_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_1.70_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_1.70_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa128_0336_170_004500 = dataArray{:, 1};
ParQs128_0336_170_004500 = dataArray{:, 2};
ParQe128_0336_170_004500 = dataArray{:, 3};
ParCsca128_0336_170_004500 = dataArray{:, 4};
ParCabs128_0336_170_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_1.70_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_1.70_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par128_0336_170_009000_P11 = dataArray{:, 1};
par128_0336_170_009000_P21 = dataArray{:, 2};
par128_0336_170_009000_P22 = dataArray{:, 3};
par128_0336_170_009000_P33 = dataArray{:, 4};
par128_0336_170_009000_P43 = dataArray{:, 5};
par128_0336_170_009000_P44 = dataArray{:, 6};
% parpol128_0336_170_009000 = dataArray{:, 7};
parpol128_0336_170_009000 = -par128_0336_170_009000_P21./par128_0336_170_009000_P11
maxparpol128_0336_170_009000 = max(parpol128_0336_170_009000)

frwd_par128_0336_170_009000 = par128_0336_170_009000_P11(1)
back_par128_0336_170_009000= par128_0336_170_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_1.70_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_1.70_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa128_0336_170_009000 = dataArray{:, 1};
ParQs128_0336_170_009000 = dataArray{:, 2};
ParQe128_0336_170_009000 = dataArray{:, 3};
ParCsca128_0336_170_009000 = dataArray{:, 4};
ParCabs128_0336_170_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_2.00_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_2.00_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par128_0336_200_002260_P11 = dataArray{:, 1};
par128_0336_200_002260_P21 = dataArray{:, 2};
par128_0336_200_002260_P22 = dataArray{:, 3};
par128_0336_200_002260_P33 = dataArray{:, 4};
par128_0336_200_002260_P43 = dataArray{:, 5};
par128_0336_200_002260_P44 = dataArray{:, 6};
% parpol128_0336_200_002260 = dataArray{:, 7};
parpol128_0336_200_002260 = -par128_0336_200_002260_P21./par128_0336_200_002260_P11
maxparpol128_0336_200_002260 = max(parpol128_0336_200_002260)

frwd_par128_0336_200_002260 = par128_0336_200_002260_P11(1)
back_par128_0336_200_002260= par128_0336_200_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_2.00_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_2.00_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa128_0336_200_002260 = dataArray{:, 1};
ParQs128_0336_200_002260 = dataArray{:, 2};
ParQe128_0336_200_002260 = dataArray{:, 3};
ParCsca128_0336_200_002260 = dataArray{:, 4};
ParCabs128_0336_200_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_2.00_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_2.00_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par128_0336_200_004500_P11 = dataArray{:, 1};
par128_0336_200_004500_P21 = dataArray{:, 2};
par128_0336_200_004500_P22 = dataArray{:, 3};
par128_0336_200_004500_P33 = dataArray{:, 4};
par128_0336_200_004500_P43 = dataArray{:, 5};
par128_0336_200_004500_P44 = dataArray{:, 6};
% parpol128_0336_200_004500 = dataArray{:, 7};
parpol128_0336_200_004500 = -par128_0336_200_004500_P21./par128_0336_200_004500_P11
maxparpol128_0336_200_004500 = max(parpol128_0336_200_004500)

frwd_par128_0336_200_004500 = par128_0336_200_004500_P11(1)
back_par128_0336_200_004500= par128_0336_200_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_2.00_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_2.00_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa128_0336_200_004500 = dataArray{:, 1};
ParQs128_0336_200_004500 = dataArray{:, 2};
ParQe128_0336_200_004500 = dataArray{:, 3};
ParCsca128_0336_200_004500 = dataArray{:, 4};
ParCabs128_0336_200_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_2.00_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_2.00_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par128_0336_200_009000_P11 = dataArray{:, 1};
par128_0336_200_009000_P21 = dataArray{:, 2};
par128_0336_200_009000_P22 = dataArray{:, 3};
par128_0336_200_009000_P33 = dataArray{:, 4};
par128_0336_200_009000_P43 = dataArray{:, 5};
par128_0336_200_009000_P44 = dataArray{:, 6};
% parpol128_0336_200_009000 = dataArray{:, 7};
parpol128_0336_200_009000 = -par128_0336_200_009000_P21./par128_0336_200_009000_P11
maxparpol128_0336_200_009000 = max(parpol128_0336_200_009000)

frwd_par128_0336_200_009000 = par128_0336_200_009000_P11(1)
back_par128_0336_200_009000= par128_0336_200_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_2.00_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.336_2.00_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa128_0336_200_009000 = dataArray{:, 1};
ParQs128_0336_200_009000 = dataArray{:, 2};
ParQe128_0336_200_009000 = dataArray{:, 3};
ParCsca128_0336_200_009000 = dataArray{:, 4};
ParCabs128_0336_200_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_1.30_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_1.30_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par128_0640_130_002260_P11 = dataArray{:, 1};
par128_0640_130_002260_P21 = dataArray{:, 2};
par128_0640_130_002260_P22 = dataArray{:, 3};
par128_0640_130_002260_P33 = dataArray{:, 4};
par128_0640_130_002260_P43 = dataArray{:, 5};
par128_0640_130_002260_P44 = dataArray{:, 6};
% parpol128_0640_130_002260 = dataArray{:, 7};
parpol128_0640_130_002260 = -par128_0640_130_002260_P21./par128_0640_130_002260_P11
maxparpol128_0640_130_002260 = max(parpol128_0640_130_002260)

frwd_par128_0640_130_002260 = par128_0640_130_002260_P11(1)
back_par128_0640_130_002260= par128_0640_130_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_1.30_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_1.30_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa128_0640_130_002260 = dataArray{:, 1};
ParQs128_0640_130_002260 = dataArray{:, 2};
ParQe128_0640_130_002260 = dataArray{:, 3};
ParCsca128_0640_130_002260 = dataArray{:, 4};
ParCabs128_0640_130_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_1.30_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_1.30_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par128_0640_130_004500_P11 = dataArray{:, 1};
par128_0640_130_004500_P21 = dataArray{:, 2};
par128_0640_130_004500_P22 = dataArray{:, 3};
par128_0640_130_004500_P33 = dataArray{:, 4};
par128_0640_130_004500_P43 = dataArray{:, 5};
par128_0640_130_004500_P44 = dataArray{:, 6};
% parpol128_0640_130_004500 = dataArray{:, 7};
parpol128_0640_130_004500 = -par128_0640_130_004500_P21./par128_0640_130_004500_P11
maxparpol128_0640_130_004500 = max(parpol128_0640_130_004500)

frwd_par128_0640_130_004500 = par128_0640_130_004500_P11(1)
back_par128_0640_130_004500= par128_0640_130_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_1.30_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_1.30_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa128_0640_130_004500 = dataArray{:, 1};
ParQs128_0640_130_004500 = dataArray{:, 2};
ParQe128_0640_130_004500 = dataArray{:, 3};
ParCsca128_0640_130_004500 = dataArray{:, 4};
ParCabs128_0640_130_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_1.30_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_1.30_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par128_0640_130_009000_P11 = dataArray{:, 1};
par128_0640_130_009000_P21 = dataArray{:, 2};
par128_0640_130_009000_P22 = dataArray{:, 3};
par128_0640_130_009000_P33 = dataArray{:, 4};
par128_0640_130_009000_P43 = dataArray{:, 5};
par128_0640_130_009000_P44 = dataArray{:, 6};
% parpol128_0640_130_009000 = dataArray{:, 7};
parpol128_0640_130_009000 = -par128_0640_130_009000_P21./par128_0640_130_009000_P11
maxparpol128_0640_130_009000 = max(parpol128_0640_130_009000)

frwd_par128_0640_130_009000 = par128_0640_130_009000_P11(1)
back_par128_0640_130_009000= par128_0640_130_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_1.30_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_1.30_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa128_0640_130_009000 = dataArray{:, 1};
ParQs128_0640_130_009000 = dataArray{:, 2};
ParQe128_0640_130_009000 = dataArray{:, 3};
ParCsca128_0640_130_009000 = dataArray{:, 4};
ParCabs128_0640_130_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_1.70_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_1.70_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par128_0640_170_002260_P11 = dataArray{:, 1};
par128_0640_170_002260_P21 = dataArray{:, 2};
par128_0640_170_002260_P22 = dataArray{:, 3};
par128_0640_170_002260_P33 = dataArray{:, 4};
par128_0640_170_002260_P43 = dataArray{:, 5};
par128_0640_170_002260_P44 = dataArray{:, 6};
% parpol128_0640_170_002260 = dataArray{:, 7};
parpol128_0640_170_002260 = -par128_0640_170_002260_P21./par128_0640_170_002260_P11
maxparpol128_0640_170_002260 = max(parpol128_0640_170_002260)

frwd_par128_0640_170_002260 = par128_0640_170_002260_P11(1)
back_par128_0640_170_002260= par128_0640_170_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_1.70_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_1.70_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa128_0640_170_002260 = dataArray{:, 1};
ParQs128_0640_170_002260 = dataArray{:, 2};
ParQe128_0640_170_002260 = dataArray{:, 3};
ParCsca128_0640_170_002260 = dataArray{:, 4};
ParCabs128_0640_170_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_1.70_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_1.70_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par128_0640_170_004500_P11 = dataArray{:, 1};
par128_0640_170_004500_P21 = dataArray{:, 2};
par128_0640_170_004500_P22 = dataArray{:, 3};
par128_0640_170_004500_P33 = dataArray{:, 4};
par128_0640_170_004500_P43 = dataArray{:, 5};
par128_0640_170_004500_P44 = dataArray{:, 6};
% parpol128_0640_170_004500 = dataArray{:, 7};
parpol128_0640_170_004500 = -par128_0640_170_004500_P21./par128_0640_170_004500_P11
maxparpol128_0640_170_004500 = max(parpol128_0640_170_004500)

frwd_par128_0640_170_004500 = par128_0640_170_004500_P11(1)
back_par128_0640_170_004500= par128_0640_170_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_1.70_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_1.70_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa128_0640_170_004500 = dataArray{:, 1};
ParQs128_0640_170_004500 = dataArray{:, 2};
ParQe128_0640_170_004500 = dataArray{:, 3};
ParCsca128_0640_170_004500 = dataArray{:, 4};
ParCabs128_0640_170_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_1.70_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_1.70_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par128_0640_170_009000_P11 = dataArray{:, 1};
par128_0640_170_009000_P21 = dataArray{:, 2};
par128_0640_170_009000_P22 = dataArray{:, 3};
par128_0640_170_009000_P33 = dataArray{:, 4};
par128_0640_170_009000_P43 = dataArray{:, 5};
par128_0640_170_009000_P44 = dataArray{:, 6};
% parpol128_0640_170_009000 = dataArray{:, 7};
parpol128_0640_170_009000 = -par128_0640_170_009000_P21./par128_0640_170_009000_P11
maxparpol128_0640_170_009000 = max(parpol128_0640_170_009000)

frwd_par128_0640_170_009000 = par128_0640_170_009000_P11(1)
back_par128_0640_170_009000= par128_0640_170_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_1.70_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_1.70_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa128_0640_170_009000 = dataArray{:, 1};
ParQs128_0640_170_009000 = dataArray{:, 2};
ParQe128_0640_170_009000 = dataArray{:, 3};
ParCsca128_0640_170_009000 = dataArray{:, 4};
ParCabs128_0640_170_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_2.00_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_2.00_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par128_0640_200_002260_P11 = dataArray{:, 1};
par128_0640_200_002260_P21 = dataArray{:, 2};
par128_0640_200_002260_P22 = dataArray{:, 3};
par128_0640_200_002260_P33 = dataArray{:, 4};
par128_0640_200_002260_P43 = dataArray{:, 5};
par128_0640_200_002260_P44 = dataArray{:, 6};
% parpol128_0640_200_002260 = dataArray{:, 7};
parpol128_0640_200_002260 = -par128_0640_200_002260_P21./par128_0640_200_002260_P11
maxparpol128_0640_200_002260 = max(parpol128_0640_200_002260)

frwd_par128_0640_200_002260 = par128_0640_200_002260_P11(1)
back_par128_0640_200_002260= par128_0640_200_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_2.00_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_2.00_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa128_0640_200_002260 = dataArray{:, 1};
ParQs128_0640_200_002260 = dataArray{:, 2};
ParQe128_0640_200_002260 = dataArray{:, 3};
ParCsca128_0640_200_002260 = dataArray{:, 4};
ParCabs128_0640_200_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_2.00_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_2.00_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par128_0640_200_004500_P11 = dataArray{:, 1};
par128_0640_200_004500_P21 = dataArray{:, 2};
par128_0640_200_004500_P22 = dataArray{:, 3};
par128_0640_200_004500_P33 = dataArray{:, 4};
par128_0640_200_004500_P43 = dataArray{:, 5};
par128_0640_200_004500_P44 = dataArray{:, 6};
% parpol128_0640_200_004500 = dataArray{:, 7};
parpol128_0640_200_004500 = -par128_0640_200_004500_P21./par128_0640_200_004500_P11
maxparpol128_0640_200_004500 = max(parpol128_0640_200_004500)

frwd_par128_0640_200_004500 = par128_0640_200_004500_P11(1)
back_par128_0640_200_004500= par128_0640_200_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_2.00_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_2.00_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa128_0640_200_004500 = dataArray{:, 1};
ParQs128_0640_200_004500 = dataArray{:, 2};
ParQe128_0640_200_004500 = dataArray{:, 3};
ParCsca128_0640_200_004500 = dataArray{:, 4};
ParCabs128_0640_200_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_2.00_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_2.00_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par128_0640_200_009000_P11 = dataArray{:, 1};
par128_0640_200_009000_P21 = dataArray{:, 2};
par128_0640_200_009000_P22 = dataArray{:, 3};
par128_0640_200_009000_P33 = dataArray{:, 4};
par128_0640_200_009000_P43 = dataArray{:, 5};
par128_0640_200_009000_P44 = dataArray{:, 6};
% parpol128_0640_200_009000 = dataArray{:, 7};
parpol128_0640_200_009000 = -par128_0640_200_009000_P21./par128_0640_200_009000_P11
maxparpol128_0640_200_009000 = max(parpol128_0640_200_009000)

frwd_par128_0640_200_009000 = par128_0640_200_009000_P11(1)
back_par128_0640_200_009000= par128_0640_200_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_2.00_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.640_2.00_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa128_0640_200_009000 = dataArray{:, 1};
ParQs128_0640_200_009000 = dataArray{:, 2};
ParQe128_0640_200_009000 = dataArray{:, 3};
ParCsca128_0640_200_009000 = dataArray{:, 4};
ParCabs128_0640_200_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_1.30_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_1.30_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par128_0960_130_002260_P11 = dataArray{:, 1};
par128_0960_130_002260_P21 = dataArray{:, 2};
par128_0960_130_002260_P22 = dataArray{:, 3};
par128_0960_130_002260_P33 = dataArray{:, 4};
par128_0960_130_002260_P43 = dataArray{:, 5};
par128_0960_130_002260_P44 = dataArray{:, 6};
% parpol128_0960_130_002260 = dataArray{:, 7};
parpol128_0960_130_002260 = -par128_0960_130_002260_P21./par128_0960_130_002260_P11
maxparpol128_0960_130_002260 = max(parpol128_0960_130_002260)

frwd_par128_0960_130_002260 = par128_0960_130_002260_P11(1)
back_par128_0960_130_002260= par128_0960_130_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_1.30_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_1.30_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa128_0960_130_002260 = dataArray{:, 1};
ParQs128_0960_130_002260 = dataArray{:, 2};
ParQe128_0960_130_002260 = dataArray{:, 3};
ParCsca128_0960_130_002260 = dataArray{:, 4};
ParCabs128_0960_130_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_1.30_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_1.30_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par128_0960_130_004500_P11 = dataArray{:, 1};
par128_0960_130_004500_P21 = dataArray{:, 2};
par128_0960_130_004500_P22 = dataArray{:, 3};
par128_0960_130_004500_P33 = dataArray{:, 4};
par128_0960_130_004500_P43 = dataArray{:, 5};
par128_0960_130_004500_P44 = dataArray{:, 6};
% parpol128_0960_130_004500 = dataArray{:, 7};
parpol128_0960_130_004500 = -par128_0960_130_004500_P21./par128_0960_130_004500_P11
maxparpol128_0960_130_004500 = max(parpol128_0960_130_004500)

frwd_par128_0960_130_004500 = par128_0960_130_004500_P11(1)
back_par128_0960_130_004500= par128_0960_130_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_1.30_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_1.30_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa128_0960_130_004500 = dataArray{:, 1};
ParQs128_0960_130_004500 = dataArray{:, 2};
ParQe128_0960_130_004500 = dataArray{:, 3};
ParCsca128_0960_130_004500 = dataArray{:, 4};
ParCabs128_0960_130_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_1.30_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_1.30_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par128_0960_130_009000_P11 = dataArray{:, 1};
par128_0960_130_009000_P21 = dataArray{:, 2};
par128_0960_130_009000_P22 = dataArray{:, 3};
par128_0960_130_009000_P33 = dataArray{:, 4};
par128_0960_130_009000_P43 = dataArray{:, 5};
par128_0960_130_009000_P44 = dataArray{:, 6};
% parpol128_0960_130_009000 = dataArray{:, 7};
parpol128_0960_130_009000 = -par128_0960_130_009000_P21./par128_0960_130_009000_P11
maxparpol128_0960_130_009000 = max(parpol128_0960_130_009000)

frwd_par128_0960_130_009000 = par128_0960_130_009000_P11(1)
back_par128_0960_130_009000= par128_0960_130_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_1.30_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_1.30_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa128_0960_130_009000 = dataArray{:, 1};
ParQs128_0960_130_009000 = dataArray{:, 2};
ParQe128_0960_130_009000 = dataArray{:, 3};
ParCsca128_0960_130_009000 = dataArray{:, 4};
ParCabs128_0960_130_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_1.70_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_1.70_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par128_0960_170_002260_P11 = dataArray{:, 1};
par128_0960_170_002260_P21 = dataArray{:, 2};
par128_0960_170_002260_P22 = dataArray{:, 3};
par128_0960_170_002260_P33 = dataArray{:, 4};
par128_0960_170_002260_P43 = dataArray{:, 5};
par128_0960_170_002260_P44 = dataArray{:, 6};
% parpol128_0960_170_002260 = dataArray{:, 7};
parpol128_0960_170_002260 = -par128_0960_170_002260_P21./par128_0960_170_002260_P11
maxparpol128_0960_170_002260 = max(parpol128_0960_170_002260)

frwd_par128_0960_170_002260 = par128_0960_170_002260_P11(1)
back_par128_0960_170_002260= par128_0960_170_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_1.70_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_1.70_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa128_0960_170_002260 = dataArray{:, 1};
ParQs128_0960_170_002260 = dataArray{:, 2};
ParQe128_0960_170_002260 = dataArray{:, 3};
ParCsca128_0960_170_002260 = dataArray{:, 4};
ParCabs128_0960_170_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_1.70_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_1.70_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par128_0960_170_004500_P11 = dataArray{:, 1};
par128_0960_170_004500_P21 = dataArray{:, 2};
par128_0960_170_004500_P22 = dataArray{:, 3};
par128_0960_170_004500_P33 = dataArray{:, 4};
par128_0960_170_004500_P43 = dataArray{:, 5};
par128_0960_170_004500_P44 = dataArray{:, 6};
% parpol128_0960_170_004500 = dataArray{:, 7};
parpol128_0960_170_004500 = -par128_0960_170_004500_P21./par128_0960_170_004500_P11
maxparpol128_0960_170_004500 = max(parpol128_0960_170_004500)

frwd_par128_0960_170_004500 = par128_0960_170_004500_P11(1)
back_par128_0960_170_004500= par128_0960_170_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_1.70_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_1.70_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa128_0960_170_004500 = dataArray{:, 1};
ParQs128_0960_170_004500 = dataArray{:, 2};
ParQe128_0960_170_004500 = dataArray{:, 3};
ParCsca128_0960_170_004500 = dataArray{:, 4};
ParCabs128_0960_170_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_1.70_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_1.70_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par128_0960_170_009000_P11 = dataArray{:, 1};
par128_0960_170_009000_P21 = dataArray{:, 2};
par128_0960_170_009000_P22 = dataArray{:, 3};
par128_0960_170_009000_P33 = dataArray{:, 4};
par128_0960_170_009000_P43 = dataArray{:, 5};
par128_0960_170_009000_P44 = dataArray{:, 6};
% parpol128_0960_170_009000 = dataArray{:, 7};
parpol128_0960_170_009000 = -par128_0960_170_009000_P21./par128_0960_170_009000_P11
maxparpol128_0960_170_009000 = max(parpol128_0960_170_009000)

frwd_par128_0960_170_009000 = par128_0960_170_009000_P11(1)
back_par128_0960_170_009000= par128_0960_170_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_1.70_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_1.70_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa128_0960_170_009000 = dataArray{:, 1};
ParQs128_0960_170_009000 = dataArray{:, 2};
ParQe128_0960_170_009000 = dataArray{:, 3};
ParCsca128_0960_170_009000 = dataArray{:, 4};
ParCabs128_0960_170_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_2.00_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_2.00_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par128_0960_200_002260_P11 = dataArray{:, 1};
par128_0960_200_002260_P21 = dataArray{:, 2};
par128_0960_200_002260_P22 = dataArray{:, 3};
par128_0960_200_002260_P33 = dataArray{:, 4};
par128_0960_200_002260_P43 = dataArray{:, 5};
par128_0960_200_002260_P44 = dataArray{:, 6};
% parpol128_0960_200_002260 = dataArray{:, 7};
parpol128_0960_200_002260 = -par128_0960_200_002260_P21./par128_0960_200_002260_P11
maxparpol128_0960_200_002260 = max(parpol128_0960_200_002260)

frwd_par128_0960_200_002260 = par128_0960_200_002260_P11(1)
back_par128_0960_200_002260= par128_0960_200_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_2.00_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_2.00_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa128_0960_200_002260 = dataArray{:, 1};
ParQs128_0960_200_002260 = dataArray{:, 2};
ParQe128_0960_200_002260 = dataArray{:, 3};
ParCsca128_0960_200_002260 = dataArray{:, 4};
ParCabs128_0960_200_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_2.00_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_2.00_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par128_0960_200_004500_P11 = dataArray{:, 1};
par128_0960_200_004500_P21 = dataArray{:, 2};
par128_0960_200_004500_P22 = dataArray{:, 3};
par128_0960_200_004500_P33 = dataArray{:, 4};
par128_0960_200_004500_P43 = dataArray{:, 5};
par128_0960_200_004500_P44 = dataArray{:, 6};
% parpol128_0960_200_004500 = dataArray{:, 7};
parpol128_0960_200_004500 = -par128_0960_200_004500_P21./par128_0960_200_004500_P11
maxparpol128_0960_200_004500 = max(parpol128_0960_200_004500)

frwd_par128_0960_200_004500 = par128_0960_200_004500_P11(1)
back_par128_0960_200_004500= par128_0960_200_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_2.00_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_2.00_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa128_0960_200_004500 = dataArray{:, 1};
ParQs128_0960_200_004500 = dataArray{:, 2};
ParQe128_0960_200_004500 = dataArray{:, 3};
ParCsca128_0960_200_004500 = dataArray{:, 4};
ParCabs128_0960_200_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_2.00_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_2.00_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par128_0960_200_009000_P11 = dataArray{:, 1};
par128_0960_200_009000_P21 = dataArray{:, 2};
par128_0960_200_009000_P22 = dataArray{:, 3};
par128_0960_200_009000_P33 = dataArray{:, 4};
par128_0960_200_009000_P43 = dataArray{:, 5};
par128_0960_200_009000_P44 = dataArray{:, 6};
% parpol128_0960_200_009000 = dataArray{:, 7};
parpol128_0960_200_009000 = -par128_0960_200_009000_P21./par128_0960_200_009000_P11
maxparpol128_0960_200_009000 = max(parpol128_0960_200_009000)

frwd_par128_0960_200_009000 = par128_0960_200_009000_P11(1)
back_par128_0960_200_009000= par128_0960_200_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_2.00_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par128_0.960_2.00_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa128_0960_200_009000 = dataArray{:, 1};
ParQs128_0960_200_009000 = dataArray{:, 2};
ParQe128_0960_200_009000 = dataArray{:, 3};
ParCsca128_0960_200_009000 = dataArray{:, 4};
ParCabs128_0960_200_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_1.30_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_1.30_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par256_0336_130_002260_P11 = dataArray{:, 1};
par256_0336_130_002260_P21 = dataArray{:, 2};
par256_0336_130_002260_P22 = dataArray{:, 3};
par256_0336_130_002260_P33 = dataArray{:, 4};
par256_0336_130_002260_P43 = dataArray{:, 5};
par256_0336_130_002260_P44 = dataArray{:, 6};
% parpol256_0336_130_002260 = dataArray{:, 7};
parpol256_0336_130_002260 = -par256_0336_130_002260_P21./par256_0336_130_002260_P11
maxparpol256_0336_130_002260 = max(parpol256_0336_130_002260)

frwd_par256_0336_130_002260 = par256_0336_130_002260_P11(1)
back_par256_0336_130_002260= par256_0336_130_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_1.30_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_1.30_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa256_0336_130_002260 = dataArray{:, 1};
ParQs256_0336_130_002260 = dataArray{:, 2};
ParQe256_0336_130_002260 = dataArray{:, 3};
ParCsca256_0336_130_002260 = dataArray{:, 4};
ParCabs256_0336_130_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_1.30_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_1.30_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par256_0336_130_004500_P11 = dataArray{:, 1};
par256_0336_130_004500_P21 = dataArray{:, 2};
par256_0336_130_004500_P22 = dataArray{:, 3};
par256_0336_130_004500_P33 = dataArray{:, 4};
par256_0336_130_004500_P43 = dataArray{:, 5};
par256_0336_130_004500_P44 = dataArray{:, 6};
% parpol256_0336_130_004500 = dataArray{:, 7};
parpol256_0336_130_004500 = -par256_0336_130_004500_P21./par256_0336_130_004500_P11
maxparpol256_0336_130_004500 = max(parpol256_0336_130_004500)

frwd_par256_0336_130_004500 = par256_0336_130_004500_P11(1)
back_par256_0336_130_004500= par256_0336_130_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_1.30_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_1.30_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa256_0336_130_004500 = dataArray{:, 1};
ParQs256_0336_130_004500 = dataArray{:, 2};
ParQe256_0336_130_004500 = dataArray{:, 3};
ParCsca256_0336_130_004500 = dataArray{:, 4};
ParCabs256_0336_130_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_1.30_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_1.30_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par256_0336_130_009000_P11 = dataArray{:, 1};
par256_0336_130_009000_P21 = dataArray{:, 2};
par256_0336_130_009000_P22 = dataArray{:, 3};
par256_0336_130_009000_P33 = dataArray{:, 4};
par256_0336_130_009000_P43 = dataArray{:, 5};
par256_0336_130_009000_P44 = dataArray{:, 6};
% parpol256_0336_130_009000 = dataArray{:, 7};
parpol256_0336_130_009000 = -par256_0336_130_009000_P21./par256_0336_130_009000_P11
maxparpol256_0336_130_009000 = max(parpol256_0336_130_009000)

frwd_par256_0336_130_009000 = par256_0336_130_009000_P11(1)
back_par256_0336_130_009000= par256_0336_130_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_1.30_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_1.30_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa256_0336_130_009000 = dataArray{:, 1};
ParQs256_0336_130_009000 = dataArray{:, 2};
ParQe256_0336_130_009000 = dataArray{:, 3};
ParCsca256_0336_130_009000 = dataArray{:, 4};
ParCabs256_0336_130_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_1.70_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_1.70_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par256_0336_170_002260_P11 = dataArray{:, 1};
par256_0336_170_002260_P21 = dataArray{:, 2};
par256_0336_170_002260_P22 = dataArray{:, 3};
par256_0336_170_002260_P33 = dataArray{:, 4};
par256_0336_170_002260_P43 = dataArray{:, 5};
par256_0336_170_002260_P44 = dataArray{:, 6};
% parpol256_0336_170_002260 = dataArray{:, 7};
parpol256_0336_170_002260 = -par256_0336_170_002260_P21./par256_0336_170_002260_P11
maxparpol256_0336_170_002260 = max(parpol256_0336_170_002260)

frwd_par256_0336_170_002260 = par256_0336_170_002260_P11(1)
back_par256_0336_170_002260= par256_0336_170_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_1.70_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_1.70_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa256_0336_170_002260 = dataArray{:, 1};
ParQs256_0336_170_002260 = dataArray{:, 2};
ParQe256_0336_170_002260 = dataArray{:, 3};
ParCsca256_0336_170_002260 = dataArray{:, 4};
ParCabs256_0336_170_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_1.70_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_1.70_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par256_0336_170_004500_P11 = dataArray{:, 1};
par256_0336_170_004500_P21 = dataArray{:, 2};
par256_0336_170_004500_P22 = dataArray{:, 3};
par256_0336_170_004500_P33 = dataArray{:, 4};
par256_0336_170_004500_P43 = dataArray{:, 5};
par256_0336_170_004500_P44 = dataArray{:, 6};
% parpol256_0336_170_004500 = dataArray{:, 7};
parpol256_0336_170_004500 = -par256_0336_170_004500_P21./par256_0336_170_004500_P11
maxparpol256_0336_170_004500 = max(parpol256_0336_170_004500)

frwd_par256_0336_170_004500 = par256_0336_170_004500_P11(1)
back_par256_0336_170_004500= par256_0336_170_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_1.70_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_1.70_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa256_0336_170_004500 = dataArray{:, 1};
ParQs256_0336_170_004500 = dataArray{:, 2};
ParQe256_0336_170_004500 = dataArray{:, 3};
ParCsca256_0336_170_004500 = dataArray{:, 4};
ParCabs256_0336_170_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_1.70_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_1.70_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par256_0336_170_009000_P11 = dataArray{:, 1};
par256_0336_170_009000_P21 = dataArray{:, 2};
par256_0336_170_009000_P22 = dataArray{:, 3};
par256_0336_170_009000_P33 = dataArray{:, 4};
par256_0336_170_009000_P43 = dataArray{:, 5};
par256_0336_170_009000_P44 = dataArray{:, 6};
% parpol256_0336_170_009000 = dataArray{:, 7};
parpol256_0336_170_009000 = -par256_0336_170_009000_P21./par256_0336_170_009000_P11
maxparpol256_0336_170_009000 = max(parpol256_0336_170_009000)

frwd_par256_0336_170_009000 = par256_0336_170_009000_P11(1)
back_par256_0336_170_009000= par256_0336_170_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_1.70_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_1.70_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa256_0336_170_009000 = dataArray{:, 1};
ParQs256_0336_170_009000 = dataArray{:, 2};
ParQe256_0336_170_009000 = dataArray{:, 3};
ParCsca256_0336_170_009000 = dataArray{:, 4};
ParCabs256_0336_170_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_2.00_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_2.00_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par256_0336_200_002260_P11 = dataArray{:, 1};
par256_0336_200_002260_P21 = dataArray{:, 2};
par256_0336_200_002260_P22 = dataArray{:, 3};
par256_0336_200_002260_P33 = dataArray{:, 4};
par256_0336_200_002260_P43 = dataArray{:, 5};
par256_0336_200_002260_P44 = dataArray{:, 6};
% parpol256_0336_200_002260 = dataArray{:, 7};
parpol256_0336_200_002260 = -par256_0336_200_002260_P21./par256_0336_200_002260_P11
maxparpol256_0336_200_002260 = max(parpol256_0336_200_002260)

frwd_par256_0336_200_002260 = par256_0336_200_002260_P11(1)
back_par256_0336_200_002260= par256_0336_200_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_2.00_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_2.00_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa256_0336_200_002260 = dataArray{:, 1};
ParQs256_0336_200_002260 = dataArray{:, 2};
ParQe256_0336_200_002260 = dataArray{:, 3};
ParCsca256_0336_200_002260 = dataArray{:, 4};
ParCabs256_0336_200_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_2.00_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_2.00_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par256_0336_200_004500_P11 = dataArray{:, 1};
par256_0336_200_004500_P21 = dataArray{:, 2};
par256_0336_200_004500_P22 = dataArray{:, 3};
par256_0336_200_004500_P33 = dataArray{:, 4};
par256_0336_200_004500_P43 = dataArray{:, 5};
par256_0336_200_004500_P44 = dataArray{:, 6};
% parpol256_0336_200_004500 = dataArray{:, 7};
parpol256_0336_200_004500 = -par256_0336_200_004500_P21./par256_0336_200_004500_P11
maxparpol256_0336_200_004500 = max(parpol256_0336_200_004500)

frwd_par256_0336_200_004500 = par256_0336_200_004500_P11(1)
back_par256_0336_200_004500= par256_0336_200_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_2.00_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_2.00_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa256_0336_200_004500 = dataArray{:, 1};
ParQs256_0336_200_004500 = dataArray{:, 2};
ParQe256_0336_200_004500 = dataArray{:, 3};
ParCsca256_0336_200_004500 = dataArray{:, 4};
ParCabs256_0336_200_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_2.00_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_2.00_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par256_0336_200_009000_P11 = dataArray{:, 1};
par256_0336_200_009000_P21 = dataArray{:, 2};
par256_0336_200_009000_P22 = dataArray{:, 3};
par256_0336_200_009000_P33 = dataArray{:, 4};
par256_0336_200_009000_P43 = dataArray{:, 5};
par256_0336_200_009000_P44 = dataArray{:, 6};
% parpol256_0336_200_009000 = dataArray{:, 7};
parpol256_0336_200_009000 = -par256_0336_200_009000_P21./par256_0336_200_009000_P11
maxparpol256_0336_200_009000 = max(parpol256_0336_200_009000)

frwd_par256_0336_200_009000 = par256_0336_200_009000_P11(1)
back_par256_0336_200_009000= par256_0336_200_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_2.00_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.336_2.00_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa256_0336_200_009000 = dataArray{:, 1};
ParQs256_0336_200_009000 = dataArray{:, 2};
ParQe256_0336_200_009000 = dataArray{:, 3};
ParCsca256_0336_200_009000 = dataArray{:, 4};
ParCabs256_0336_200_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_1.30_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_1.30_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par256_0640_130_002260_P11 = dataArray{:, 1};
par256_0640_130_002260_P21 = dataArray{:, 2};
par256_0640_130_002260_P22 = dataArray{:, 3};
par256_0640_130_002260_P33 = dataArray{:, 4};
par256_0640_130_002260_P43 = dataArray{:, 5};
par256_0640_130_002260_P44 = dataArray{:, 6};
% parpol256_0640_130_002260 = dataArray{:, 7};
parpol256_0640_130_002260 = -par256_0640_130_002260_P21./par256_0640_130_002260_P11
maxparpol256_0640_130_002260 = max(parpol256_0640_130_002260)

frwd_par256_0640_130_002260 = par256_0640_130_002260_P11(1)
back_par256_0640_130_002260= par256_0640_130_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_1.30_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_1.30_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa256_0640_130_002260 = dataArray{:, 1};
ParQs256_0640_130_002260 = dataArray{:, 2};
ParQe256_0640_130_002260 = dataArray{:, 3};
ParCsca256_0640_130_002260 = dataArray{:, 4};
ParCabs256_0640_130_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_1.30_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_1.30_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par256_0640_130_004500_P11 = dataArray{:, 1};
par256_0640_130_004500_P21 = dataArray{:, 2};
par256_0640_130_004500_P22 = dataArray{:, 3};
par256_0640_130_004500_P33 = dataArray{:, 4};
par256_0640_130_004500_P43 = dataArray{:, 5};
par256_0640_130_004500_P44 = dataArray{:, 6};
% parpol256_0640_130_004500 = dataArray{:, 7};
parpol256_0640_130_004500 = -par256_0640_130_004500_P21./par256_0640_130_004500_P11
maxparpol256_0640_130_004500 = max(parpol256_0640_130_004500)

frwd_par256_0640_130_004500 = par256_0640_130_004500_P11(1)
back_par256_0640_130_004500= par256_0640_130_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_1.30_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_1.30_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa256_0640_130_004500 = dataArray{:, 1};
ParQs256_0640_130_004500 = dataArray{:, 2};
ParQe256_0640_130_004500 = dataArray{:, 3};
ParCsca256_0640_130_004500 = dataArray{:, 4};
ParCabs256_0640_130_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_1.30_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_1.30_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par256_0640_130_009000_P11 = dataArray{:, 1};
par256_0640_130_009000_P21 = dataArray{:, 2};
par256_0640_130_009000_P22 = dataArray{:, 3};
par256_0640_130_009000_P33 = dataArray{:, 4};
par256_0640_130_009000_P43 = dataArray{:, 5};
par256_0640_130_009000_P44 = dataArray{:, 6};
% parpol256_0640_130_009000 = dataArray{:, 7};
parpol256_0640_130_009000 = -par256_0640_130_009000_P21./par256_0640_130_009000_P11
maxparpol256_0640_130_009000 = max(parpol256_0640_130_009000)

frwd_par256_0640_130_009000 = par256_0640_130_009000_P11(1)
back_par256_0640_130_009000= par256_0640_130_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_1.30_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_1.30_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa256_0640_130_009000 = dataArray{:, 1};
ParQs256_0640_130_009000 = dataArray{:, 2};
ParQe256_0640_130_009000 = dataArray{:, 3};
ParCsca256_0640_130_009000 = dataArray{:, 4};
ParCabs256_0640_130_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_1.70_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_1.70_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par256_0640_170_002260_P11 = dataArray{:, 1};
par256_0640_170_002260_P21 = dataArray{:, 2};
par256_0640_170_002260_P22 = dataArray{:, 3};
par256_0640_170_002260_P33 = dataArray{:, 4};
par256_0640_170_002260_P43 = dataArray{:, 5};
par256_0640_170_002260_P44 = dataArray{:, 6};
% parpol256_0640_170_002260 = dataArray{:, 7};
parpol256_0640_170_002260 = -par256_0640_170_002260_P21./par256_0640_170_002260_P11
maxparpol256_0640_170_002260 = max(parpol256_0640_170_002260)

frwd_par256_0640_170_002260 = par256_0640_170_002260_P11(1)
back_par256_0640_170_002260= par256_0640_170_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_1.70_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_1.70_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa256_0640_170_002260 = dataArray{:, 1};
ParQs256_0640_170_002260 = dataArray{:, 2};
ParQe256_0640_170_002260 = dataArray{:, 3};
ParCsca256_0640_170_002260 = dataArray{:, 4};
ParCabs256_0640_170_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_1.70_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_1.70_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par256_0640_170_004500_P11 = dataArray{:, 1};
par256_0640_170_004500_P21 = dataArray{:, 2};
par256_0640_170_004500_P22 = dataArray{:, 3};
par256_0640_170_004500_P33 = dataArray{:, 4};
par256_0640_170_004500_P43 = dataArray{:, 5};
par256_0640_170_004500_P44 = dataArray{:, 6};
% parpol256_0640_170_004500 = dataArray{:, 7};
parpol256_0640_170_004500 = -par256_0640_170_004500_P21./par256_0640_170_004500_P11
maxparpol256_0640_170_004500 = max(parpol256_0640_170_004500)

frwd_par256_0640_170_004500 = par256_0640_170_004500_P11(1)
back_par256_0640_170_004500= par256_0640_170_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_1.70_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_1.70_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa256_0640_170_004500 = dataArray{:, 1};
ParQs256_0640_170_004500 = dataArray{:, 2};
ParQe256_0640_170_004500 = dataArray{:, 3};
ParCsca256_0640_170_004500 = dataArray{:, 4};
ParCabs256_0640_170_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_1.70_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_1.70_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par256_0640_170_009000_P11 = dataArray{:, 1};
par256_0640_170_009000_P21 = dataArray{:, 2};
par256_0640_170_009000_P22 = dataArray{:, 3};
par256_0640_170_009000_P33 = dataArray{:, 4};
par256_0640_170_009000_P43 = dataArray{:, 5};
par256_0640_170_009000_P44 = dataArray{:, 6};
% parpol256_0640_170_009000 = dataArray{:, 7};
parpol256_0640_170_009000 = -par256_0640_170_009000_P21./par256_0640_170_009000_P11
maxparpol256_0640_170_009000 = max(parpol256_0640_170_009000)

frwd_par256_0640_170_009000 = par256_0640_170_009000_P11(1)
back_par256_0640_170_009000= par256_0640_170_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_1.70_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_1.70_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa256_0640_170_009000 = dataArray{:, 1};
ParQs256_0640_170_009000 = dataArray{:, 2};
ParQe256_0640_170_009000 = dataArray{:, 3};
ParCsca256_0640_170_009000 = dataArray{:, 4};
ParCabs256_0640_170_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_2.00_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_2.00_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par256_0640_200_002260_P11 = dataArray{:, 1};
par256_0640_200_002260_P21 = dataArray{:, 2};
par256_0640_200_002260_P22 = dataArray{:, 3};
par256_0640_200_002260_P33 = dataArray{:, 4};
par256_0640_200_002260_P43 = dataArray{:, 5};
par256_0640_200_002260_P44 = dataArray{:, 6};
% parpol256_0640_200_002260 = dataArray{:, 7};
parpol256_0640_200_002260 = -par256_0640_200_002260_P21./par256_0640_200_002260_P11
maxparpol256_0640_200_002260 = max(parpol256_0640_200_002260)

frwd_par256_0640_200_002260 = par256_0640_200_002260_P11(1)
back_par256_0640_200_002260= par256_0640_200_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_2.00_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_2.00_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa256_0640_200_002260 = dataArray{:, 1};
ParQs256_0640_200_002260 = dataArray{:, 2};
ParQe256_0640_200_002260 = dataArray{:, 3};
ParCsca256_0640_200_002260 = dataArray{:, 4};
ParCabs256_0640_200_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_2.00_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_2.00_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par256_0640_200_004500_P11 = dataArray{:, 1};
par256_0640_200_004500_P21 = dataArray{:, 2};
par256_0640_200_004500_P22 = dataArray{:, 3};
par256_0640_200_004500_P33 = dataArray{:, 4};
par256_0640_200_004500_P43 = dataArray{:, 5};
par256_0640_200_004500_P44 = dataArray{:, 6};
% parpol256_0640_200_004500 = dataArray{:, 7};
parpol256_0640_200_004500 = -par256_0640_200_004500_P21./par256_0640_200_004500_P11
maxparpol256_0640_200_004500 = max(parpol256_0640_200_004500)

frwd_par256_0640_200_004500 = par256_0640_200_004500_P11(1)
back_par256_0640_200_004500= par256_0640_200_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_2.00_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_2.00_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa256_0640_200_004500 = dataArray{:, 1};
ParQs256_0640_200_004500 = dataArray{:, 2};
ParQe256_0640_200_004500 = dataArray{:, 3};
ParCsca256_0640_200_004500 = dataArray{:, 4};
ParCabs256_0640_200_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_2.00_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_2.00_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par256_0640_200_009000_P11 = dataArray{:, 1};
par256_0640_200_009000_P21 = dataArray{:, 2};
par256_0640_200_009000_P22 = dataArray{:, 3};
par256_0640_200_009000_P33 = dataArray{:, 4};
par256_0640_200_009000_P43 = dataArray{:, 5};
par256_0640_200_009000_P44 = dataArray{:, 6};
% parpol256_0640_200_009000 = dataArray{:, 7};
parpol256_0640_200_009000 = -par256_0640_200_009000_P21./par256_0640_200_009000_P11
maxparpol256_0640_200_009000 = max(parpol256_0640_200_009000)

frwd_par256_0640_200_009000 = par256_0640_200_009000_P11(1)
back_par256_0640_200_009000= par256_0640_200_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_2.00_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.640_2.00_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa256_0640_200_009000 = dataArray{:, 1};
ParQs256_0640_200_009000 = dataArray{:, 2};
ParQe256_0640_200_009000 = dataArray{:, 3};
ParCsca256_0640_200_009000 = dataArray{:, 4};
ParCabs256_0640_200_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_1.30_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_1.30_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par256_0960_130_002260_P11 = dataArray{:, 1};
par256_0960_130_002260_P21 = dataArray{:, 2};
par256_0960_130_002260_P22 = dataArray{:, 3};
par256_0960_130_002260_P33 = dataArray{:, 4};
par256_0960_130_002260_P43 = dataArray{:, 5};
par256_0960_130_002260_P44 = dataArray{:, 6};
% parpol256_0960_130_002260 = dataArray{:, 7};
parpol256_0960_130_002260 = -par256_0960_130_002260_P21./par256_0960_130_002260_P11
maxparpol256_0960_130_002260 = max(parpol256_0960_130_002260)

frwd_par256_0960_130_002260 = par256_0960_130_002260_P11(1)
back_par256_0960_130_002260= par256_0960_130_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_1.30_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_1.30_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa256_0960_130_002260 = dataArray{:, 1};
ParQs256_0960_130_002260 = dataArray{:, 2};
ParQe256_0960_130_002260 = dataArray{:, 3};
ParCsca256_0960_130_002260 = dataArray{:, 4};
ParCabs256_0960_130_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_1.30_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_1.30_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par256_0960_130_004500_P11 = dataArray{:, 1};
par256_0960_130_004500_P21 = dataArray{:, 2};
par256_0960_130_004500_P22 = dataArray{:, 3};
par256_0960_130_004500_P33 = dataArray{:, 4};
par256_0960_130_004500_P43 = dataArray{:, 5};
par256_0960_130_004500_P44 = dataArray{:, 6};
% parpol256_0960_130_004500 = dataArray{:, 7};
parpol256_0960_130_004500 = -par256_0960_130_004500_P21./par256_0960_130_004500_P11
maxparpol256_0960_130_004500 = max(parpol256_0960_130_004500)

frwd_par256_0960_130_004500 = par256_0960_130_004500_P11(1)
back_par256_0960_130_004500= par256_0960_130_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_1.30_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_1.30_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa256_0960_130_004500 = dataArray{:, 1};
ParQs256_0960_130_004500 = dataArray{:, 2};
ParQe256_0960_130_004500 = dataArray{:, 3};
ParCsca256_0960_130_004500 = dataArray{:, 4};
ParCabs256_0960_130_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_1.30_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_1.30_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par256_0960_130_009000_P11 = dataArray{:, 1};
par256_0960_130_009000_P21 = dataArray{:, 2};
par256_0960_130_009000_P22 = dataArray{:, 3};
par256_0960_130_009000_P33 = dataArray{:, 4};
par256_0960_130_009000_P43 = dataArray{:, 5};
par256_0960_130_009000_P44 = dataArray{:, 6};
% parpol256_0960_130_009000 = dataArray{:, 7};
parpol256_0960_130_009000 = -par256_0960_130_009000_P21./par256_0960_130_009000_P11
maxparpol256_0960_130_009000 = max(parpol256_0960_130_009000)

frwd_par256_0960_130_009000 = par256_0960_130_009000_P11(1)
back_par256_0960_130_009000= par256_0960_130_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_1.30_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_1.30_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa256_0960_130_009000 = dataArray{:, 1};
ParQs256_0960_130_009000 = dataArray{:, 2};
ParQe256_0960_130_009000 = dataArray{:, 3};
ParCsca256_0960_130_009000 = dataArray{:, 4};
ParCabs256_0960_130_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_1.70_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_1.70_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par256_0960_170_002260_P11 = dataArray{:, 1};
par256_0960_170_002260_P21 = dataArray{:, 2};
par256_0960_170_002260_P22 = dataArray{:, 3};
par256_0960_170_002260_P33 = dataArray{:, 4};
par256_0960_170_002260_P43 = dataArray{:, 5};
par256_0960_170_002260_P44 = dataArray{:, 6};
% parpol256_0960_170_002260 = dataArray{:, 7};
parpol256_0960_170_002260 = -par256_0960_170_002260_P21./par256_0960_170_002260_P11
maxparpol256_0960_170_002260 = max(parpol256_0960_170_002260)

frwd_par256_0960_170_002260 = par256_0960_170_002260_P11(1)
back_par256_0960_170_002260= par256_0960_170_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_1.70_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_1.70_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa256_0960_170_002260 = dataArray{:, 1};
ParQs256_0960_170_002260 = dataArray{:, 2};
ParQe256_0960_170_002260 = dataArray{:, 3};
ParCsca256_0960_170_002260 = dataArray{:, 4};
ParCabs256_0960_170_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_1.70_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_1.70_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par256_0960_170_004500_P11 = dataArray{:, 1};
par256_0960_170_004500_P21 = dataArray{:, 2};
par256_0960_170_004500_P22 = dataArray{:, 3};
par256_0960_170_004500_P33 = dataArray{:, 4};
par256_0960_170_004500_P43 = dataArray{:, 5};
par256_0960_170_004500_P44 = dataArray{:, 6};
% parpol256_0960_170_004500 = dataArray{:, 7};
parpol256_0960_170_004500 = -par256_0960_170_004500_P21./par256_0960_170_004500_P11
maxparpol256_0960_170_004500 = max(parpol256_0960_170_004500)

frwd_par256_0960_170_004500 = par256_0960_170_004500_P11(1)
back_par256_0960_170_004500= par256_0960_170_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_1.70_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_1.70_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa256_0960_170_004500 = dataArray{:, 1};
ParQs256_0960_170_004500 = dataArray{:, 2};
ParQe256_0960_170_004500 = dataArray{:, 3};
ParCsca256_0960_170_004500 = dataArray{:, 4};
ParCabs256_0960_170_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_1.70_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_1.70_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par256_0960_170_009000_P11 = dataArray{:, 1};
par256_0960_170_009000_P21 = dataArray{:, 2};
par256_0960_170_009000_P22 = dataArray{:, 3};
par256_0960_170_009000_P33 = dataArray{:, 4};
par256_0960_170_009000_P43 = dataArray{:, 5};
par256_0960_170_009000_P44 = dataArray{:, 6};
% parpol256_0960_170_009000 = dataArray{:, 7};
parpol256_0960_170_009000 = -par256_0960_170_009000_P21./par256_0960_170_009000_P11
maxparpol256_0960_170_009000 = max(parpol256_0960_170_009000)

frwd_par256_0960_170_009000 = par256_0960_170_009000_P11(1)
back_par256_0960_170_009000= par256_0960_170_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_1.70_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_1.70_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa256_0960_170_009000 = dataArray{:, 1};
ParQs256_0960_170_009000 = dataArray{:, 2};
ParQe256_0960_170_009000 = dataArray{:, 3};
ParCsca256_0960_170_009000 = dataArray{:, 4};
ParCabs256_0960_170_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_2.00_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_2.00_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par256_0960_200_002260_P11 = dataArray{:, 1};
par256_0960_200_002260_P21 = dataArray{:, 2};
par256_0960_200_002260_P22 = dataArray{:, 3};
par256_0960_200_002260_P33 = dataArray{:, 4};
par256_0960_200_002260_P43 = dataArray{:, 5};
par256_0960_200_002260_P44 = dataArray{:, 6};
% parpol256_0960_200_002260 = dataArray{:, 7};
parpol256_0960_200_002260 = -par256_0960_200_002260_P21./par256_0960_200_002260_P11
maxparpol256_0960_200_002260 = max(parpol256_0960_200_002260)

frwd_par256_0960_200_002260 = par256_0960_200_002260_P11(1)
back_par256_0960_200_002260= par256_0960_200_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_2.00_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_2.00_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa256_0960_200_002260 = dataArray{:, 1};
ParQs256_0960_200_002260 = dataArray{:, 2};
ParQe256_0960_200_002260 = dataArray{:, 3};
ParCsca256_0960_200_002260 = dataArray{:, 4};
ParCabs256_0960_200_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_2.00_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_2.00_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par256_0960_200_004500_P11 = dataArray{:, 1};
par256_0960_200_004500_P21 = dataArray{:, 2};
par256_0960_200_004500_P22 = dataArray{:, 3};
par256_0960_200_004500_P33 = dataArray{:, 4};
par256_0960_200_004500_P43 = dataArray{:, 5};
par256_0960_200_004500_P44 = dataArray{:, 6};
% parpol256_0960_200_004500 = dataArray{:, 7};
parpol256_0960_200_004500 = -par256_0960_200_004500_P21./par256_0960_200_004500_P11
maxparpol256_0960_200_004500 = max(parpol256_0960_200_004500)

frwd_par256_0960_200_004500 = par256_0960_200_004500_P11(1)
back_par256_0960_200_004500= par256_0960_200_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_2.00_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_2.00_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa256_0960_200_004500 = dataArray{:, 1};
ParQs256_0960_200_004500 = dataArray{:, 2};
ParQe256_0960_200_004500 = dataArray{:, 3};
ParCsca256_0960_200_004500 = dataArray{:, 4};
ParCabs256_0960_200_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_2.00_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_2.00_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par256_0960_200_009000_P11 = dataArray{:, 1};
par256_0960_200_009000_P21 = dataArray{:, 2};
par256_0960_200_009000_P22 = dataArray{:, 3};
par256_0960_200_009000_P33 = dataArray{:, 4};
par256_0960_200_009000_P43 = dataArray{:, 5};
par256_0960_200_009000_P44 = dataArray{:, 6};
% parpol256_0960_200_009000 = dataArray{:, 7};
parpol256_0960_200_009000 = -par256_0960_200_009000_P21./par256_0960_200_009000_P11
maxparpol256_0960_200_009000 = max(parpol256_0960_200_009000)

frwd_par256_0960_200_009000 = par256_0960_200_009000_P11(1)
back_par256_0960_200_009000= par256_0960_200_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_2.00_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par256_0.960_2.00_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa256_0960_200_009000 = dataArray{:, 1};
ParQs256_0960_200_009000 = dataArray{:, 2};
ParQe256_0960_200_009000 = dataArray{:, 3};
ParCsca256_0960_200_009000 = dataArray{:, 4};
ParCabs256_0960_200_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_1.30_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_1.30_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par512_0336_130_002260_P11 = dataArray{:, 1};
par512_0336_130_002260_P21 = dataArray{:, 2};
par512_0336_130_002260_P22 = dataArray{:, 3};
par512_0336_130_002260_P33 = dataArray{:, 4};
par512_0336_130_002260_P43 = dataArray{:, 5};
par512_0336_130_002260_P44 = dataArray{:, 6};
% parpol512_0336_130_002260 = dataArray{:, 7};
parpol512_0336_130_002260 = -par512_0336_130_002260_P21./par512_0336_130_002260_P11
maxparpol512_0336_130_002260 = max(parpol512_0336_130_002260)

frwd_par512_0336_130_002260 = par512_0336_130_002260_P11(1)
back_par512_0336_130_002260= par512_0336_130_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_1.30_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_1.30_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa512_0336_130_002260 = dataArray{:, 1};
ParQs512_0336_130_002260 = dataArray{:, 2};
ParQe512_0336_130_002260 = dataArray{:, 3};
ParCsca512_0336_130_002260 = dataArray{:, 4};
ParCabs512_0336_130_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_1.30_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_1.30_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par512_0336_130_004500_P11 = dataArray{:, 1};
par512_0336_130_004500_P21 = dataArray{:, 2};
par512_0336_130_004500_P22 = dataArray{:, 3};
par512_0336_130_004500_P33 = dataArray{:, 4};
par512_0336_130_004500_P43 = dataArray{:, 5};
par512_0336_130_004500_P44 = dataArray{:, 6};
% parpol512_0336_130_004500 = dataArray{:, 7};
parpol512_0336_130_004500 = -par512_0336_130_004500_P21./par512_0336_130_004500_P11
maxparpol512_0336_130_004500 = max(parpol512_0336_130_004500)

frwd_par512_0336_130_004500 = par512_0336_130_004500_P11(1)
back_par512_0336_130_004500= par512_0336_130_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_1.30_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_1.30_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa512_0336_130_004500 = dataArray{:, 1};
ParQs512_0336_130_004500 = dataArray{:, 2};
ParQe512_0336_130_004500 = dataArray{:, 3};
ParCsca512_0336_130_004500 = dataArray{:, 4};
ParCabs512_0336_130_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_1.30_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_1.30_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par512_0336_130_009000_P11 = dataArray{:, 1};
par512_0336_130_009000_P21 = dataArray{:, 2};
par512_0336_130_009000_P22 = dataArray{:, 3};
par512_0336_130_009000_P33 = dataArray{:, 4};
par512_0336_130_009000_P43 = dataArray{:, 5};
par512_0336_130_009000_P44 = dataArray{:, 6};
% parpol512_0336_130_009000 = dataArray{:, 7};
parpol512_0336_130_009000 = -par512_0336_130_009000_P21./par512_0336_130_009000_P11
maxparpol512_0336_130_009000 = max(parpol512_0336_130_009000)

frwd_par512_0336_130_009000 = par512_0336_130_009000_P11(1)
back_par512_0336_130_009000= par512_0336_130_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_1.30_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_1.30_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa512_0336_130_009000 = dataArray{:, 1};
ParQs512_0336_130_009000 = dataArray{:, 2};
ParQe512_0336_130_009000 = dataArray{:, 3};
ParCsca512_0336_130_009000 = dataArray{:, 4};
ParCabs512_0336_130_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_1.70_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_1.70_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par512_0336_170_002260_P11 = dataArray{:, 1};
par512_0336_170_002260_P21 = dataArray{:, 2};
par512_0336_170_002260_P22 = dataArray{:, 3};
par512_0336_170_002260_P33 = dataArray{:, 4};
par512_0336_170_002260_P43 = dataArray{:, 5};
par512_0336_170_002260_P44 = dataArray{:, 6};
% parpol512_0336_170_002260 = dataArray{:, 7};
parpol512_0336_170_002260 = -par512_0336_170_002260_P21./par512_0336_170_002260_P11
maxparpol512_0336_170_002260 = max(parpol512_0336_170_002260)

frwd_par512_0336_170_002260 = par512_0336_170_002260_P11(1)
back_par512_0336_170_002260= par512_0336_170_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_1.70_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_1.70_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa512_0336_170_002260 = dataArray{:, 1};
ParQs512_0336_170_002260 = dataArray{:, 2};
ParQe512_0336_170_002260 = dataArray{:, 3};
ParCsca512_0336_170_002260 = dataArray{:, 4};
ParCabs512_0336_170_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_1.70_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_1.70_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par512_0336_170_004500_P11 = dataArray{:, 1};
par512_0336_170_004500_P21 = dataArray{:, 2};
par512_0336_170_004500_P22 = dataArray{:, 3};
par512_0336_170_004500_P33 = dataArray{:, 4};
par512_0336_170_004500_P43 = dataArray{:, 5};
par512_0336_170_004500_P44 = dataArray{:, 6};
% parpol512_0336_170_004500 = dataArray{:, 7};
parpol512_0336_170_004500 = -par512_0336_170_004500_P21./par512_0336_170_004500_P11
maxparpol512_0336_170_004500 = max(parpol512_0336_170_004500)

frwd_par512_0336_170_004500 = par512_0336_170_004500_P11(1)
back_par512_0336_170_004500= par512_0336_170_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_1.70_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_1.70_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa512_0336_170_004500 = dataArray{:, 1};
ParQs512_0336_170_004500 = dataArray{:, 2};
ParQe512_0336_170_004500 = dataArray{:, 3};
ParCsca512_0336_170_004500 = dataArray{:, 4};
ParCabs512_0336_170_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_1.70_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_1.70_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par512_0336_170_009000_P11 = dataArray{:, 1};
par512_0336_170_009000_P21 = dataArray{:, 2};
par512_0336_170_009000_P22 = dataArray{:, 3};
par512_0336_170_009000_P33 = dataArray{:, 4};
par512_0336_170_009000_P43 = dataArray{:, 5};
par512_0336_170_009000_P44 = dataArray{:, 6};
% parpol512_0336_170_009000 = dataArray{:, 7};
parpol512_0336_170_009000 = -par512_0336_170_009000_P21./par512_0336_170_009000_P11
maxparpol512_0336_170_009000 = max(parpol512_0336_170_009000)

frwd_par512_0336_170_009000 = par512_0336_170_009000_P11(1)
back_par512_0336_170_009000= par512_0336_170_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_1.70_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_1.70_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa512_0336_170_009000 = dataArray{:, 1};
ParQs512_0336_170_009000 = dataArray{:, 2};
ParQe512_0336_170_009000 = dataArray{:, 3};
ParCsca512_0336_170_009000 = dataArray{:, 4};
ParCabs512_0336_170_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_2.00_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_2.00_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par512_0336_200_002260_P11 = dataArray{:, 1};
par512_0336_200_002260_P21 = dataArray{:, 2};
par512_0336_200_002260_P22 = dataArray{:, 3};
par512_0336_200_002260_P33 = dataArray{:, 4};
par512_0336_200_002260_P43 = dataArray{:, 5};
par512_0336_200_002260_P44 = dataArray{:, 6};
% parpol512_0336_200_002260 = dataArray{:, 7};
parpol512_0336_200_002260 = -par512_0336_200_002260_P21./par512_0336_200_002260_P11
maxparpol512_0336_200_002260 = max(parpol512_0336_200_002260)

frwd_par512_0336_200_002260 = par512_0336_200_002260_P11(1)
back_par512_0336_200_002260= par512_0336_200_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_2.00_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_2.00_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa512_0336_200_002260 = dataArray{:, 1};
ParQs512_0336_200_002260 = dataArray{:, 2};
ParQe512_0336_200_002260 = dataArray{:, 3};
ParCsca512_0336_200_002260 = dataArray{:, 4};
ParCabs512_0336_200_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_2.00_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_2.00_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par512_0336_200_004500_P11 = dataArray{:, 1};
par512_0336_200_004500_P21 = dataArray{:, 2};
par512_0336_200_004500_P22 = dataArray{:, 3};
par512_0336_200_004500_P33 = dataArray{:, 4};
par512_0336_200_004500_P43 = dataArray{:, 5};
par512_0336_200_004500_P44 = dataArray{:, 6};
% parpol512_0336_200_004500 = dataArray{:, 7};
parpol512_0336_200_004500 = -par512_0336_200_004500_P21./par512_0336_200_004500_P11
maxparpol512_0336_200_004500 = max(parpol512_0336_200_004500)

frwd_par512_0336_200_004500 = par512_0336_200_004500_P11(1)
back_par512_0336_200_004500= par512_0336_200_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_2.00_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_2.00_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa512_0336_200_004500 = dataArray{:, 1};
ParQs512_0336_200_004500 = dataArray{:, 2};
ParQe512_0336_200_004500 = dataArray{:, 3};
ParCsca512_0336_200_004500 = dataArray{:, 4};
ParCabs512_0336_200_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_2.00_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_2.00_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par512_0336_200_009000_P11 = dataArray{:, 1};
par512_0336_200_009000_P21 = dataArray{:, 2};
par512_0336_200_009000_P22 = dataArray{:, 3};
par512_0336_200_009000_P33 = dataArray{:, 4};
par512_0336_200_009000_P43 = dataArray{:, 5};
par512_0336_200_009000_P44 = dataArray{:, 6};
% parpol512_0336_200_009000 = dataArray{:, 7};
parpol512_0336_200_009000 = -par512_0336_200_009000_P21./par512_0336_200_009000_P11
maxparpol512_0336_200_009000 = max(parpol512_0336_200_009000)

frwd_par512_0336_200_009000 = par512_0336_200_009000_P11(1)
back_par512_0336_200_009000= par512_0336_200_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_2.00_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.336_2.00_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa512_0336_200_009000 = dataArray{:, 1};
ParQs512_0336_200_009000 = dataArray{:, 2};
ParQe512_0336_200_009000 = dataArray{:, 3};
ParCsca512_0336_200_009000 = dataArray{:, 4};
ParCabs512_0336_200_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_1.30_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_1.30_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par512_0640_130_002260_P11 = dataArray{:, 1};
par512_0640_130_002260_P21 = dataArray{:, 2};
par512_0640_130_002260_P22 = dataArray{:, 3};
par512_0640_130_002260_P33 = dataArray{:, 4};
par512_0640_130_002260_P43 = dataArray{:, 5};
par512_0640_130_002260_P44 = dataArray{:, 6};
% parpol512_0640_130_002260 = dataArray{:, 7};
parpol512_0640_130_002260 = -par512_0640_130_002260_P21./par512_0640_130_002260_P11
maxparpol512_0640_130_002260 = max(parpol512_0640_130_002260)

frwd_par512_0640_130_002260 = par512_0640_130_002260_P11(1)
back_par512_0640_130_002260= par512_0640_130_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_1.30_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_1.30_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa512_0640_130_002260 = dataArray{:, 1};
ParQs512_0640_130_002260 = dataArray{:, 2};
ParQe512_0640_130_002260 = dataArray{:, 3};
ParCsca512_0640_130_002260 = dataArray{:, 4};
ParCabs512_0640_130_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_1.30_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_1.30_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par512_0640_130_004500_P11 = dataArray{:, 1};
par512_0640_130_004500_P21 = dataArray{:, 2};
par512_0640_130_004500_P22 = dataArray{:, 3};
par512_0640_130_004500_P33 = dataArray{:, 4};
par512_0640_130_004500_P43 = dataArray{:, 5};
par512_0640_130_004500_P44 = dataArray{:, 6};
% parpol512_0640_130_004500 = dataArray{:, 7};
parpol512_0640_130_004500 = -par512_0640_130_004500_P21./par512_0640_130_004500_P11
maxparpol512_0640_130_004500 = max(parpol512_0640_130_004500)

frwd_par512_0640_130_004500 = par512_0640_130_004500_P11(1)
back_par512_0640_130_004500= par512_0640_130_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_1.30_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_1.30_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa512_0640_130_004500 = dataArray{:, 1};
ParQs512_0640_130_004500 = dataArray{:, 2};
ParQe512_0640_130_004500 = dataArray{:, 3};
ParCsca512_0640_130_004500 = dataArray{:, 4};
ParCabs512_0640_130_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_1.30_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_1.30_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par512_0640_130_009000_P11 = dataArray{:, 1};
par512_0640_130_009000_P21 = dataArray{:, 2};
par512_0640_130_009000_P22 = dataArray{:, 3};
par512_0640_130_009000_P33 = dataArray{:, 4};
par512_0640_130_009000_P43 = dataArray{:, 5};
par512_0640_130_009000_P44 = dataArray{:, 6};
% parpol512_0640_130_009000 = dataArray{:, 7};
parpol512_0640_130_009000 = -par512_0640_130_009000_P21./par512_0640_130_009000_P11
maxparpol512_0640_130_009000 = max(parpol512_0640_130_009000)

frwd_par512_0640_130_009000 = par512_0640_130_009000_P11(1)
back_par512_0640_130_009000= par512_0640_130_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_1.30_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_1.30_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa512_0640_130_009000 = dataArray{:, 1};
ParQs512_0640_130_009000 = dataArray{:, 2};
ParQe512_0640_130_009000 = dataArray{:, 3};
ParCsca512_0640_130_009000 = dataArray{:, 4};
ParCabs512_0640_130_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_1.70_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_1.70_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par512_0640_170_002260_P11 = dataArray{:, 1};
par512_0640_170_002260_P21 = dataArray{:, 2};
par512_0640_170_002260_P22 = dataArray{:, 3};
par512_0640_170_002260_P33 = dataArray{:, 4};
par512_0640_170_002260_P43 = dataArray{:, 5};
par512_0640_170_002260_P44 = dataArray{:, 6};
% parpol512_0640_170_002260 = dataArray{:, 7};
parpol512_0640_170_002260 = -par512_0640_170_002260_P21./par512_0640_170_002260_P11
maxparpol512_0640_170_002260 = max(parpol512_0640_170_002260)

frwd_par512_0640_170_002260 = par512_0640_170_002260_P11(1)
back_par512_0640_170_002260= par512_0640_170_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_1.70_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_1.70_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa512_0640_170_002260 = dataArray{:, 1};
ParQs512_0640_170_002260 = dataArray{:, 2};
ParQe512_0640_170_002260 = dataArray{:, 3};
ParCsca512_0640_170_002260 = dataArray{:, 4};
ParCabs512_0640_170_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_1.70_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_1.70_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par512_0640_170_004500_P11 = dataArray{:, 1};
par512_0640_170_004500_P21 = dataArray{:, 2};
par512_0640_170_004500_P22 = dataArray{:, 3};
par512_0640_170_004500_P33 = dataArray{:, 4};
par512_0640_170_004500_P43 = dataArray{:, 5};
par512_0640_170_004500_P44 = dataArray{:, 6};
% parpol512_0640_170_004500 = dataArray{:, 7};
parpol512_0640_170_004500 = -par512_0640_170_004500_P21./par512_0640_170_004500_P11
maxparpol512_0640_170_004500 = max(parpol512_0640_170_004500)

frwd_par512_0640_170_004500 = par512_0640_170_004500_P11(1)
back_par512_0640_170_004500= par512_0640_170_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_1.70_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_1.70_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa512_0640_170_004500 = dataArray{:, 1};
ParQs512_0640_170_004500 = dataArray{:, 2};
ParQe512_0640_170_004500 = dataArray{:, 3};
ParCsca512_0640_170_004500 = dataArray{:, 4};
ParCabs512_0640_170_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_1.70_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_1.70_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par512_0640_170_009000_P11 = dataArray{:, 1};
par512_0640_170_009000_P21 = dataArray{:, 2};
par512_0640_170_009000_P22 = dataArray{:, 3};
par512_0640_170_009000_P33 = dataArray{:, 4};
par512_0640_170_009000_P43 = dataArray{:, 5};
par512_0640_170_009000_P44 = dataArray{:, 6};
% parpol512_0640_170_009000 = dataArray{:, 7};
parpol512_0640_170_009000 = -par512_0640_170_009000_P21./par512_0640_170_009000_P11
maxparpol512_0640_170_009000 = max(parpol512_0640_170_009000)

frwd_par512_0640_170_009000 = par512_0640_170_009000_P11(1)
back_par512_0640_170_009000= par512_0640_170_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_1.70_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_1.70_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa512_0640_170_009000 = dataArray{:, 1};
ParQs512_0640_170_009000 = dataArray{:, 2};
ParQe512_0640_170_009000 = dataArray{:, 3};
ParCsca512_0640_170_009000 = dataArray{:, 4};
ParCabs512_0640_170_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_2.00_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_2.00_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par512_0640_200_002260_P11 = dataArray{:, 1};
par512_0640_200_002260_P21 = dataArray{:, 2};
par512_0640_200_002260_P22 = dataArray{:, 3};
par512_0640_200_002260_P33 = dataArray{:, 4};
par512_0640_200_002260_P43 = dataArray{:, 5};
par512_0640_200_002260_P44 = dataArray{:, 6};
% parpol512_0640_200_002260 = dataArray{:, 7};
parpol512_0640_200_002260 = -par512_0640_200_002260_P21./par512_0640_200_002260_P11
maxparpol512_0640_200_002260 = max(parpol512_0640_200_002260)

frwd_par512_0640_200_002260 = par512_0640_200_002260_P11(1)
back_par512_0640_200_002260= par512_0640_200_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_2.00_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_2.00_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa512_0640_200_002260 = dataArray{:, 1};
ParQs512_0640_200_002260 = dataArray{:, 2};
ParQe512_0640_200_002260 = dataArray{:, 3};
ParCsca512_0640_200_002260 = dataArray{:, 4};
ParCabs512_0640_200_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_2.00_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_2.00_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par512_0640_200_004500_P11 = dataArray{:, 1};
par512_0640_200_004500_P21 = dataArray{:, 2};
par512_0640_200_004500_P22 = dataArray{:, 3};
par512_0640_200_004500_P33 = dataArray{:, 4};
par512_0640_200_004500_P43 = dataArray{:, 5};
par512_0640_200_004500_P44 = dataArray{:, 6};
% parpol512_0640_200_004500 = dataArray{:, 7};
parpol512_0640_200_004500 = -par512_0640_200_004500_P21./par512_0640_200_004500_P11
maxparpol512_0640_200_004500 = max(parpol512_0640_200_004500)

frwd_par512_0640_200_004500 = par512_0640_200_004500_P11(1)
back_par512_0640_200_004500= par512_0640_200_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_2.00_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_2.00_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa512_0640_200_004500 = dataArray{:, 1};
ParQs512_0640_200_004500 = dataArray{:, 2};
ParQe512_0640_200_004500 = dataArray{:, 3};
ParCsca512_0640_200_004500 = dataArray{:, 4};
ParCabs512_0640_200_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_2.00_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_2.00_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par512_0640_200_009000_P11 = dataArray{:, 1};
par512_0640_200_009000_P21 = dataArray{:, 2};
par512_0640_200_009000_P22 = dataArray{:, 3};
par512_0640_200_009000_P33 = dataArray{:, 4};
par512_0640_200_009000_P43 = dataArray{:, 5};
par512_0640_200_009000_P44 = dataArray{:, 6};
% parpol512_0640_200_009000 = dataArray{:, 7};
parpol512_0640_200_009000 = -par512_0640_200_009000_P21./par512_0640_200_009000_P11
maxparpol512_0640_200_009000 = max(parpol512_0640_200_009000)

frwd_par512_0640_200_009000 = par512_0640_200_009000_P11(1)
back_par512_0640_200_009000= par512_0640_200_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_2.00_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.640_2.00_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa512_0640_200_009000 = dataArray{:, 1};
ParQs512_0640_200_009000 = dataArray{:, 2};
ParQe512_0640_200_009000 = dataArray{:, 3};
ParCsca512_0640_200_009000 = dataArray{:, 4};
ParCabs512_0640_200_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_1.30_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_1.30_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par512_0960_130_002260_P11 = dataArray{:, 1};
par512_0960_130_002260_P21 = dataArray{:, 2};
par512_0960_130_002260_P22 = dataArray{:, 3};
par512_0960_130_002260_P33 = dataArray{:, 4};
par512_0960_130_002260_P43 = dataArray{:, 5};
par512_0960_130_002260_P44 = dataArray{:, 6};
% parpol512_0960_130_002260 = dataArray{:, 7};
parpol512_0960_130_002260 = -par512_0960_130_002260_P21./par512_0960_130_002260_P11
maxparpol512_0960_130_002260 = max(parpol512_0960_130_002260)

frwd_par512_0960_130_002260 = par512_0960_130_002260_P11(1)
back_par512_0960_130_002260= par512_0960_130_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_1.30_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_1.30_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa512_0960_130_002260 = dataArray{:, 1};
ParQs512_0960_130_002260 = dataArray{:, 2};
ParQe512_0960_130_002260 = dataArray{:, 3};
ParCsca512_0960_130_002260 = dataArray{:, 4};
ParCabs512_0960_130_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_1.30_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_1.30_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par512_0960_130_004500_P11 = dataArray{:, 1};
par512_0960_130_004500_P21 = dataArray{:, 2};
par512_0960_130_004500_P22 = dataArray{:, 3};
par512_0960_130_004500_P33 = dataArray{:, 4};
par512_0960_130_004500_P43 = dataArray{:, 5};
par512_0960_130_004500_P44 = dataArray{:, 6};
% parpol512_0960_130_004500 = dataArray{:, 7};
parpol512_0960_130_004500 = -par512_0960_130_004500_P21./par512_0960_130_004500_P11
maxparpol512_0960_130_004500 = max(parpol512_0960_130_004500)

frwd_par512_0960_130_004500 = par512_0960_130_004500_P11(1)
back_par512_0960_130_004500= par512_0960_130_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_1.30_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_1.30_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa512_0960_130_004500 = dataArray{:, 1};
ParQs512_0960_130_004500 = dataArray{:, 2};
ParQe512_0960_130_004500 = dataArray{:, 3};
ParCsca512_0960_130_004500 = dataArray{:, 4};
ParCabs512_0960_130_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_1.30_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_1.30_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par512_0960_130_009000_P11 = dataArray{:, 1};
par512_0960_130_009000_P21 = dataArray{:, 2};
par512_0960_130_009000_P22 = dataArray{:, 3};
par512_0960_130_009000_P33 = dataArray{:, 4};
par512_0960_130_009000_P43 = dataArray{:, 5};
par512_0960_130_009000_P44 = dataArray{:, 6};
% parpol512_0960_130_009000 = dataArray{:, 7};
parpol512_0960_130_009000 = -par512_0960_130_009000_P21./par512_0960_130_009000_P11
maxparpol512_0960_130_009000 = max(parpol512_0960_130_009000)

frwd_par512_0960_130_009000 = par512_0960_130_009000_P11(1)
back_par512_0960_130_009000= par512_0960_130_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_1.30_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_1.30_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa512_0960_130_009000 = dataArray{:, 1};
ParQs512_0960_130_009000 = dataArray{:, 2};
ParQe512_0960_130_009000 = dataArray{:, 3};
ParCsca512_0960_130_009000 = dataArray{:, 4};
ParCabs512_0960_130_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_1.70_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_1.70_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par512_0960_170_002260_P11 = dataArray{:, 1};
par512_0960_170_002260_P21 = dataArray{:, 2};
par512_0960_170_002260_P22 = dataArray{:, 3};
par512_0960_170_002260_P33 = dataArray{:, 4};
par512_0960_170_002260_P43 = dataArray{:, 5};
par512_0960_170_002260_P44 = dataArray{:, 6};
% parpol512_0960_170_002260 = dataArray{:, 7};
parpol512_0960_170_002260 = -par512_0960_170_002260_P21./par512_0960_170_002260_P11
maxparpol512_0960_170_002260 = max(parpol512_0960_170_002260)

frwd_par512_0960_170_002260 = par512_0960_170_002260_P11(1)
back_par512_0960_170_002260= par512_0960_170_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_1.70_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_1.70_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa512_0960_170_002260 = dataArray{:, 1};
ParQs512_0960_170_002260 = dataArray{:, 2};
ParQe512_0960_170_002260 = dataArray{:, 3};
ParCsca512_0960_170_002260 = dataArray{:, 4};
ParCabs512_0960_170_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_1.70_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_1.70_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par512_0960_170_004500_P11 = dataArray{:, 1};
par512_0960_170_004500_P21 = dataArray{:, 2};
par512_0960_170_004500_P22 = dataArray{:, 3};
par512_0960_170_004500_P33 = dataArray{:, 4};
par512_0960_170_004500_P43 = dataArray{:, 5};
par512_0960_170_004500_P44 = dataArray{:, 6};
% parpol512_0960_170_004500 = dataArray{:, 7};
parpol512_0960_170_004500 = -par512_0960_170_004500_P21./par512_0960_170_004500_P11
maxparpol512_0960_170_004500 = max(parpol512_0960_170_004500)

frwd_par512_0960_170_004500 = par512_0960_170_004500_P11(1)
back_par512_0960_170_004500= par512_0960_170_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_1.70_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_1.70_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa512_0960_170_004500 = dataArray{:, 1};
ParQs512_0960_170_004500 = dataArray{:, 2};
ParQe512_0960_170_004500 = dataArray{:, 3};
ParCsca512_0960_170_004500 = dataArray{:, 4};
ParCabs512_0960_170_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_1.70_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_1.70_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par512_0960_170_009000_P11 = dataArray{:, 1};
par512_0960_170_009000_P21 = dataArray{:, 2};
par512_0960_170_009000_P22 = dataArray{:, 3};
par512_0960_170_009000_P33 = dataArray{:, 4};
par512_0960_170_009000_P43 = dataArray{:, 5};
par512_0960_170_009000_P44 = dataArray{:, 6};
% parpol512_0960_170_009000 = dataArray{:, 7};
parpol512_0960_170_009000 = -par512_0960_170_009000_P21./par512_0960_170_009000_P11
maxparpol512_0960_170_009000 = max(parpol512_0960_170_009000)

frwd_par512_0960_170_009000 = par512_0960_170_009000_P11(1)
back_par512_0960_170_009000= par512_0960_170_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_1.70_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_1.70_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa512_0960_170_009000 = dataArray{:, 1};
ParQs512_0960_170_009000 = dataArray{:, 2};
ParQe512_0960_170_009000 = dataArray{:, 3};
ParCsca512_0960_170_009000 = dataArray{:, 4};
ParCabs512_0960_170_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_2.00_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_2.00_0.02260.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par512_0960_200_002260_P11 = dataArray{:, 1};
par512_0960_200_002260_P21 = dataArray{:, 2};
par512_0960_200_002260_P22 = dataArray{:, 3};
par512_0960_200_002260_P33 = dataArray{:, 4};
par512_0960_200_002260_P43 = dataArray{:, 5};
par512_0960_200_002260_P44 = dataArray{:, 6};
% parpol512_0960_200_002260 = dataArray{:, 7};
parpol512_0960_200_002260 = -par512_0960_200_002260_P21./par512_0960_200_002260_P11
maxparpol512_0960_200_002260 = max(parpol512_0960_200_002260)

frwd_par512_0960_200_002260 = par512_0960_200_002260_P11(1)
back_par512_0960_200_002260= par512_0960_200_002260_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_2.00_0.02260.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_2.00_0.02260.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa512_0960_200_002260 = dataArray{:, 1};
ParQs512_0960_200_002260 = dataArray{:, 2};
ParQe512_0960_200_002260 = dataArray{:, 3};
ParCsca512_0960_200_002260 = dataArray{:, 4};
ParCabs512_0960_200_002260 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_2.00_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_2.00_0.04500.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par512_0960_200_004500_P11 = dataArray{:, 1};
par512_0960_200_004500_P21 = dataArray{:, 2};
par512_0960_200_004500_P22 = dataArray{:, 3};
par512_0960_200_004500_P33 = dataArray{:, 4};
par512_0960_200_004500_P43 = dataArray{:, 5};
par512_0960_200_004500_P44 = dataArray{:, 6};
% parpol512_0960_200_004500 = dataArray{:, 7};
parpol512_0960_200_004500 = -par512_0960_200_004500_P21./par512_0960_200_004500_P11
maxparpol512_0960_200_004500 = max(parpol512_0960_200_004500)

frwd_par512_0960_200_004500 = par512_0960_200_004500_P11(1)
back_par512_0960_200_004500= par512_0960_200_004500_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_2.00_0.04500.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_2.00_0.04500.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa512_0960_200_004500 = dataArray{:, 1};
ParQs512_0960_200_004500 = dataArray{:, 2};
ParQe512_0960_200_004500 = dataArray{:, 3};
ParCsca512_0960_200_004500 = dataArray{:, 4};
ParCabs512_0960_200_004500 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_2.00_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 15:32:28

%% Initialize variables.
addpath(genpath('/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special'))
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_2.00_0.09000.csv';
delimiter = ' ';
startRow = 4;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
par512_0960_200_009000_P11 = dataArray{:, 1};
par512_0960_200_009000_P21 = dataArray{:, 2};
par512_0960_200_009000_P22 = dataArray{:, 3};
par512_0960_200_009000_P33 = dataArray{:, 4};
par512_0960_200_009000_P43 = dataArray{:, 5};
par512_0960_200_009000_P44 = dataArray{:, 6};
% parpol512_0960_200_009000 = dataArray{:, 7};
parpol512_0960_200_009000 = -par512_0960_200_009000_P21./par512_0960_200_009000_P11
maxparpol512_0960_200_009000 = max(parpol512_0960_200_009000)

frwd_par512_0960_200_009000 = par512_0960_200_009000_P11(1)
back_par512_0960_200_009000= par512_0960_200_009000_P11(181)

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_2.00_0.09000.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/03/23 16:24:40

%% Initialize variables.
filename = '/home/ucnk/Dropbox/Dropbox/matlab_plots_and_data/mstmoutputs/special/data/param/par512_0.960_2.00_0.09000.csv';
delimiter = ' ';
startRow = 2;
endRow = 2;

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%*s%*s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow-startRow+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
ParQa512_0960_200_009000 = dataArray{:, 1};
ParQs512_0960_200_009000 = dataArray{:, 2};
ParQe512_0960_200_009000 = dataArray{:, 3};
ParCsca512_0960_200_009000 = dataArray{:, 4};
ParCabs512_0960_200_009000 = dataArray{:, 5};


%% Clear temporary variables
clearvars filename delimiter startRow endRow formatSpec fileID dataArray ans;
